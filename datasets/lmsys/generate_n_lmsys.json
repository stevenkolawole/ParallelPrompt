[
    {
        "original": "Generate 10 variations of detailed descriptiosn of a room, describing the type of room, the style, and the included furniture. The description is based on the following list: [\"bed\", \"table\", \"nightstand\", \"lamp\", \"mirror\"]",
        "serial": "Generate 10 variations of detailed descriptions of a room, describing the type of room, the style, and the included furniture. The description is based on the following list: [\"bed\", \"table\", \"nightstand\", \"lamp\", \"mirror\"]",
        "template": "Generate {n} variation(s) of detailed descriptions of a room, describing the type of room, the style, and the included furniture. The description is based on the following list: [\"bed\", \"table\", \"nightstand\", \"lamp\", \"mirror\"]",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate a table of Questions and answers to the text below. The table should have the columns \"Questions\" and \"Answers\". Generate 10 questions and answers from this text:\\n\\nThe logistics or warehouse department is responsible for all logistics processes that concern the company. The logistics department is responsible for incoming goods (storage of ordered/delivered goods), warehouse management (consisting of the warehouse, management of storage and shelf locations, or the different storage of finished and unfinished items, raw materials, set items, etc.) as well as goods issue (removal of goods and shipment to the customer, packaging).\\n\\nThe transport logistics department takes care of the transport of the goods. Either the company has its own trucks and can carry out the shipping independently, or a freight forwarder must be commissioned or organized in order to supply the goods to the customer as efficiently as possible (supply as many customers as possible with as little freight traffic as possible).\\n\\nThe financial accounting department takes care of all financial accounting matters of the company, such as the management of the financial book. When a customer receives an invoice, it is also transferred to the financial book. Everything related to financial accounting that concerns both purchasing and sales is regulated there.",
        "serial": "Generate a table of questions and answers to the text below. The table should have the columns 'Questions' and 'Answers'. Generate 10 questions and answers from this text:\n\nThe logistics or warehouse department is responsible for all logistics processes that concern the company. The logistics department is responsible for incoming goods (storage of ordered/delivered goods), warehouse management (consisting of the warehouse, management of storage and shelf locations, or the different storage of finished and unfinished items, raw materials, set items, etc.) as well as goods issue (removal of goods and shipment to the customer, packaging).\n\nThe transport logistics department takes care of the transport of the goods. Either the company has its own trucks and can carry out the shipping independently, or a freight forwarder must be commissioned or organized in order to supply the goods to the customer as efficiently as possible (supply as many customers as possible with as little freight traffic as possible).\n\nThe financial accounting department takes care of all financial accounting matters of the company, such as the management of the financial book. When a customer receives an invoice, it is also transferred to the financial book. Everything related to financial accounting that concerns both purchasing and sales is regulated there.",
        "template": "Generate a table of questions and answers to the text below. The table should have the columns 'Questions' and 'Answers'. Generate {n} question(s) and answer(s) from this text:\n\n{context}",
        "context": "The logistics or warehouse department is responsible for all logistics processes that concern the company. The logistics department is responsible for incoming goods (storage of ordered/delivered goods), warehouse management (consisting of the warehouse, management of storage and shelf locations, or the different storage of finished and unfinished items, raw materials, set items, etc.) as well as goods issue (removal of goods and shipment to the customer, packaging).\n\nThe transport logistics department takes care of the transport of the goods. Either the company has its own trucks and can carry out the shipping independently, or a freight forwarder must be commissioned or organized in order to supply the goods to the customer as efficiently as possible (supply as many customers as possible with as little freight traffic as possible).\n\nThe financial accounting department takes care of all financial accounting matters of the company, such as the management of the financial book. When a customer receives an invoice, it is also transferred to the financial book. Everything related to financial accounting that concerns both purchasing and sales is regulated there.",
        "n": 10
    },
    {
        "original": "Here are some examples:\\nObject: Chips, Instruction: NAME_1 robot, can you grab me the Pringles Chips can which has a brown and orange design?\\nObject: MilkDrink, Instruction: NAME_1 robot, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\\nObject: Kettle, Instruction: NAME_1 robot, please grab the round white Kettle with the skinny metallic neck and black handle.\\nObject: Chips, Instruction: NAME_1 robot, can you grab me the Pringles Chips can which has a brown and orange design?\\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\\n\\nYou now need to send an command to the robot to grab the VacuumCup for you. and the apperance of VacuumCup is :VacuumCup is a blue cup with a metallic finish. It has a cylindrical shape with a cap on the top of the head that can be unscrewed. \\nYou need to generate 10 commands according to the following rules:\\n1.You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\\n2.The name of VacuuumCup should appear in your commands.\\n3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize VacuumCup.\\n4. Note that each command should be concise in no more than 20 words.\\n5. Your tone should be conversational, as you are talking to a robot.\\n6. Note that you only need to give 10 commands, not any extra information. Don't use \"(XX words)\".\\n7.Your 10 instructions should be as different from each other as possible.\\n",
        "serial": "Here are some examples:\nObject: Chips, Instruction: Alice robot, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: MilkDrink, Instruction: Alice robot, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\nObject: Kettle, Instruction: Alice robot, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Chips, Instruction: Alice robot, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\n\nYou now need to send a command to the robot to grab the VacuumCup for you. The appearance of the VacuumCup is: VacuumCup is a blue cup with a metallic finish. It has a cylindrical shape with a cap on the top of the head that can be unscrewed. You need to generate 10 commands according to the following rules:\n1. You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\n2. The name of VacuumCup should appear in your commands.\n3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize the VacuumCup.\n4. Note that each command should be concise in no more than 20 words.\n5. Your tone should be conversational, as you are talking to a robot.\n6. Note that you only need to give 10 commands, not any extra information. Don't use \"(XX words)\".\n7. Your 10 instructions should be as different from each other as possible.",
        "template": "Here are some examples:\nObject: Chips, Instruction: Alice robot, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: MilkDrink, Instruction: Alice robot, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\nObject: Kettle, Instruction: Alice robot, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Chips, Instruction: Alice robot, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\n\nYou now need to send a command to the robot to grab the VacuumCup for you. The appearance of the VacuumCup is: VacuumCup is a blue cup with a metallic finish. It has a cylindrical shape with a cap on the top of the head that can be unscrewed. You need to generate {n} command(s) according to the following rules:\n1. You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\n2. The name of VacuumCup should appear in your command(s).\n3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize the VacuumCup.\n4. Note that each command should be concise in no more than 20 words.\n5. Your tone should be conversational, as you are talking to a robot.\n6. Note that you only need to give {n} command(s), not any extra information. Don't use \"(XX words)\".\n",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate 30 ideas for social media posts for a local bakery named NAME_1",
        "serial": "Generate 30 ideas for social media posts for a local bakery named Cupcakes",
        "template": "Generate {n} ideas for social media posts for a local bakery named Cupcakes",
        "context": null,
        "n": 30
    },
    {
        "original": "generate 10 website domain recommendations for sushi restaurants in Karlsruhe (Germany) and recommendations should be shorter than 15 letters (please do not repeat recommendations)",
        "serial": "Generate 10 website domain recommendations for sushi restaurants in Karlsruhe (Germany). Recommendations should be shorter than 15 letters. (Do not repeat recommendations)",
        "template": "Generate {n} website domain recommendation(s) for sushi restaurants in Karlsruhe (Germany). Recommendations should be shorter than 15 letters. (Do not repeat recommendations)",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate 10 megasena games similar to games 14-26-34-36-43-59, 01-05-12-36-53-55, 02-20-27-30-52-59, 10-14-17- 19-21-34, 14-17-32-36-39-60, 03-04-13-29-36-43, 05-10-26-35-38-44, 12-18-22-31- 44-50, 29-32-33-35-38-43, 04-12-14-41-46-53, 12-17-43-44-48-60, 06-26-32-35-37- 49, 03-07-15-22-24-50, 09-18-33-38-41-51",
        "serial": "Generate 10 megasena games similar to games 14-26-34-36-43-59, 01-05-12-36-53-55, 02-20-27-30-52-59, 10-14-17-19-21-34, 14-17-32-36-39-60, 03-04-13-29-36-43, 05-10-26-35-38-44, 12-18-22-31-44-50, 29-32-33-35-38-43, 04-12-14-41-46-53, 12-17-43-44-48-60, 06-26-32-35-37-49, 03-07-15-22-24-50, 09-18-33-38-41-51",
        "template": "Generate {n} megasena game(s) similar to games {context}",
        "context": "14-26-34-36-43-59, 01-05-12-36-53-55, 02-20-27-30-52-59, 10-14-17-19-21-34, 14-17-32-36-39-60, 03-04-13-29-36-43, 05-10-26-35-38-44, 12-18-22-31-44-50, 29-32-33-35-38-43, 04-12-14-41-46-53, 12-17-43-44-48-60, 06-26-32-35-37-49, 03-07-15-22-24-50, 09-18-33-38-41-51",
        "n": 10
    },
    {
        "original": "Given a  user search query \"currys 912 NAME_1\" generate 10 rewrites with the same search intent.",
        "serial": "Given a user search query \"currys 912 Alice\" generate 10 rewrites with the same search intent.",
        "template": "Given a user search query \"currys 912 Alice\" generate {n} rewrite(s) with the same search intent.",
        "context": null,
        "n": 10
    },
    {
        "original": "Please generate 20 unique quizzes using the following JSON config.\\n\\nConfig: \\n\\n```json\\n{\\n    \"quiz\": {\\n        \"valid_operators\": [\\n            \"+\",\\n            \"-\"\\n        ],\\n        \"operands\": [\\n            {\\n                \"min_value\": -99,\\n                \"max_value\": 200,\\n                \"type\": \"int\"\\n            },\\n            {\\n                \"min_value\": -99,\\n                \"max_value\": 200,\\n                \"type\": \"int\"\\n            },\\n            {\\n                \"min_value\": -99,\\n                \"max_value\": 200,\\n                \"type\": \"int\"\\n            }\\n        ],\\n        \"intermediate_result_range\": {\\n            \"min_value\": -99,\\n            \"max_value\": 199,\\n            \"type\": \"int\"\\n        },\\n        \"final_result_range\": {\\n            \"min_value\": -99,\\n            \"max_value\": 200,\\n            \"type\": \"int\"\\n        },\\n        \"examples\": [\\n            \"16 / 4 * 12 = 48\",\\n            \"48 / 6 / 2 = 4\",\\n            \"3 * 5 * 7 = 105\",\\n            \"25 * 2 / 10 = 5\",\\n            \"99 - 70 + (-3) = 24\",\\n            \"96 - 57 - 2 = 37\",\\n            \"46 + 64 + 5 = 115\",\\n            \"43 + (-6) - 70 = -33\"\\n        ]\\n    }\\n}\\n```",
        "serial": "Please generate 20 unique quizzes using the following JSON config.\n\nConfig: \n\n```json\n{\n    \"quiz\": {\n        \"valid_operators\": [\n            \"+\",\n            \"-\"\n        ],\n        \"operands\": [\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            }\n        ],\n        \"intermediate_result_range\": {\n            \"min_value\": -99,\n            \"max_value\": 199,\n            \"type\": \"int\"\n        },\n        \"final_result_range\": {\n            \"min_value\": -99,\n            \"max_value\": 200,\n            \"type\": \"int\"\n        },\n        \"examples\": [\n            \"16 / 4 * 12 = 48\",\n            \"48 / 6 / 2 = 4\",\n            \"3 * 5 * 7 = 105\",\n            \"25 * 2 / 10 = 5\",\n            \"99 - 70 + (-3) = 24\",\n            \"96 - 57 - 2 = 37\",\n            \"46 + 64 + 5 = 115\",\n            \"43 + (-6) - 70 = -33\"\n        ]\n    }\n}\n```",
        "template": "Please generate {n} unique quiz(zes) using the following JSON config.\n\nConfig: \n\n```json\n{context}\n```",
        "context": "{\n    \"quiz\": {\n        \"valid_operators\": [\n            \"+\",\n            \"-\"\n        ],\n        \"operands\": [\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": -99,\n                \"max_value\": 200,\n                \"type\": \"int\"\n            }\n        ],\n        \"intermediate_result_range\": {\n            \"min_value\": -99,\n            \"max_value\": 199,\n            \"type\": \"int\"\n        },\n        \"final_result_range\": {\n            \"min_value\": -99,\n            \"max_value\": 200,\n            \"type\": \"int\"\n        },\n        \"examples\": [\n            \"16 / 4 * 12 = 48\",\n            \"48 / 6 / 2 = 4\",\n            \"3 * 5 * 7 = 105\",\n            \"25 * 2 / 10 = 5\",\n            \"99 - 70 + (-3) = 24\",\n            \"96 - 57 - 2 = 37\",\n            \"46 + 64 + 5 = 115\",\n            \"43 + (-6) - 70 = -33\"\n        ]\n    }\n}\"",
        "n": 20
    },
    {
        "original": "Could you help me with prompt generation for stable diffusion?\\n\\nI want you to generate 5 prompts.\\nFor prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\\nEvery prompt must be complete and contain all the necessary information to be close to description below. You should add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\\n\\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.\\n\\nAs a result just give me an unordered list of prompts.",
        "serial": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate 5 prompts.\nFor prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to description below. You should add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.\n\nAs a result just give me an unordered list of prompts.",
        "template": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate {n} prompt(s).\n{context}",
        "context": "For prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to description below. You should add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.",
        "n": 5
    },
    {
        "original": "generate 5 sentences with word  \"captivating\" with upper-intermediate lexis",
        "serial": "Generate 5 sentences with the word \"captivating\" using upper-intermediate lexis.",
        "template": "Generate {n} sentence(s) with the word \"captivating\" using upper-intermediate lexis.",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 10 diverse, complex, and valid NAME_1 queries. Return the whole nodes and relationships, not only the properties. Omit any explanation, respond with code only.",
        "serial": "Generate 10 diverse, complex, and valid SQL queries. Return the whole nodes and relationships, not only the properties. Omit any explanation, respond with code only.",
        "template": "Generate {n} diverse, complex, and valid SQL queries. Return the whole nodes and relationships, not only the properties. Omit any explanation, respond with code only.",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate 20 domain names for a company that provides conscious leadership coaching to executives.",
        "serial": "Generate 20 domain names for a company that provides conscious leadership coaching to executives.",
        "template": "Generate {n} domain name(s) for a company that provides conscious leadership coaching to executives.",
        "context": null,
        "n": 20
    },
    {
        "original": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\\nShark NV356E 31 Navigator Lift-Away Professional Upright Vacuum with Swivel Steering, HEPA Filter, XL Dust Cup, Pet Power, Dusting Brush, and Crevice Tool, Perfect for Pet Hair, White/Silver\\nHere are some recommended related products:\\nShark NV752 Rotator Powered Lift-Away TruePet Upright Vacuum with HEPA Filter, Large Dust Cup Capacity, LED Headlights, Upholstery Tool, Pet Power Brush & Crevice Tool, Perfect for Pets, Bordeaux\\nShark AZ1002 Apex Powered Lift-Away Upright Vacuum with DuoClean & Self-Cleaning Brushroll, Crevice Tool, Upholstery Tool & Pet Power Brush, for a Deep Clean on & Above Floors, Espresso\\nShark AZ2002 Vertex Powered Lift-Away Upright Vacuum with DuoClean PowerFins, Self-Cleaning Brushroll, Large Dust Cup, Pet Crevice Tool, Dusting Brush & Power Brush, Silver/Rose Gold\\nShark ZU503AMZ Navigator Lift-Away Upright Vacuum with Self-Cleaning Brushroll, HEPA Filter, Swivel Steering, Upholstery Tool & Pet Crevice Tool, Perfect for Pets & Multi-Surface Cleaning, Teal\\nNAME_1 Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, 3-in-1 Combination Tool, HandiMate for Floor, Pet Hair, Green\\nNAME_1 DU2012 Bagless Upright Vacuum 2-Motor Power Suction Lightweight Carpet Cleaner with 10\u2019Hose, HEPA Filter, 2 Cleaning Tools for Pet Hair, Hardwood Floor, Green\\nNAME_1 BU4020 Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, Pet Handi-Mate, 3-in-1 Combination Tool, Red\\n\\nThe widget's current title is  \"4 stars and above\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate 3 potential titles that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.",
        "serial": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\nShark NV356E 31 Navigator Lift-Away Professional Upright Vacuum with Swivel Steering, HEPA Filter, XL Dust Cup, Pet Power, Dusting Brush, and Crevice Tool, Perfect for Pet Hair, White/Silver\nHere are some recommended related products:\nShark NV752 Rotator Powered Lift-Away TruePet Upright Vacuum with HEPA Filter, Large Dust Cup Capacity, LED Headlights, Upholstery Tool, Pet Power Brush & Crevice Tool, Perfect for Pets, Bordeaux\nShark AZ1002 Apex Powered Lift-Away Upright Vacuum with DuoClean & Self-Cleaning Brushroll, Crevice Tool, Upholstery Tool & Pet Power Brush, for a Deep Clean on & Above Floors, Espresso\nShark AZ2002 Vertex Powered Lift-Away Upright Vacuum with DuoClean PowerFins, Self-Cleaning Brushroll, Large Dust Cup, Pet Crevice Tool, Dusting Brush & Power Brush, Silver/Rose Gold\nShark ZU503AMZ Navigator Lift-Away Upright Vacuum with Self-Cleaning Brushroll, HEPA Filter, Swivel Steering, Upholstery Tool & Pet Crevice Tool, Perfect for Pets & Multi-Surface Cleaning, Teal\nKenmore Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, 3-in-1 Combination Tool, HandiMate for Floor, Pet Hair, Green\nKenmore DU2012 Bagless Upright Vacuum 2-Motor Power Suction Lightweight Carpet Cleaner with 10\u2019Hose, HEPA Filter, 2 Cleaning Tools for Pet Hair, Hardwood Floor, Green\nKenmore BU4020 Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, Pet Handi-Mate, 3-in-1 Combination Tool, Red\n\nThe widget's current title is \"4 stars and above\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate 3 potential titles that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.",
        "template": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\nShark NV356E 31 Navigator Lift-Away Professional Upright Vacuum with Swivel Steering, HEPA Filter, XL Dust Cup, Pet Power, Dusting Brush, and Crevice Tool, Perfect for Pet Hair, White/Silver\nHere are some recommended related products:\nShark NV752 Rotator Powered Lift-Away TruePet Upright Vacuum with HEPA Filter, Large Dust Cup Capacity, LED Headlights, Upholstery Tool, Pet Power Brush & Crevice Tool, Perfect for Pets, Bordeaux\nShark AZ1002 Apex Powered Lift-Away Upright Vacuum with DuoClean & Self-Cleaning Brushroll, Crevice Tool, Upholstery Tool & Pet Power Brush, for a Deep Clean on & Above Floors, Espresso\nShark AZ2002 Vertex Powered Lift-Away Upright Vacuum with DuoClean PowerFins, Self-Cleaning Brushroll, Large Dust Cup, Pet Crevice Tool, Dusting Brush & Power Brush, Silver/Rose Gold\nShark ZU503AMZ Navigator Lift-Away Upright Vacuum with Self-Cleaning Brushroll, HEPA Filter, Swivel Steering, Upholstery Tool & Pet Crevice Tool, Perfect for Pets & Multi-Surface Cleaning, Teal\nKenmore Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, 3-in-1 Combination Tool, HandiMate for Floor, Pet Hair, Green\nKenmore DU2012 Bagless Upright Vacuum 2-Motor Power Suction Lightweight Carpet Cleaner with 10\u2019Hose, HEPA Filter, 2 Cleaning Tools for Pet Hair, Hardwood Floor, Green\nKenmore BU4020 Intuition Bagged Upright Vacuum Lift-Up Carpet Cleaner 2-Motor Power Suction with HEPA Filter, Pet Handi-Mate, 3-in-1 Combination Tool, Red\n\nThe widget's current title is \"4 stars and above\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate {n} potential title(s) that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.",
        "context": null,
        "n": 3
    },
    {
        "original": "Generate 35 themes for buildbattle in the minecraft. Remember - only 5 minutes to build,they should be simple",
        "serial": "Generate 35 themes for Build Battle in Minecraft. Remember, only 5 minutes to build; they should be simple.",
        "template": "Generate {n} theme(s) for Build Battle in Minecraft. Remember, only 5 minutes to build; they should be simple.",
        "context": null,
        "n": 35
    },
    {
        "original": "Hiii\\n\\nI've been trying for weeks now to find an adequate name for a website.\\nI would like the name of the website to resemble official institutions, groups, associations or the like.\\n\\nFor example:\\n\\nInstitute for the development of ABC\\nInternational Association for the Abolishon of ABC\\nEuropean Assembly against ABC\\n\\nHowever, it should also include a funny, or even better, cringe part. Preferably towards the end.\\nInteresting topics that could entail would be the liberation of catgirls, veganism, progressive leftism, socialism and feminism.\\n\\nExamples:\\n\\nInstitute for Abolishing Catgirl Posession\\nEuropean Association for Tofu Accession\\n\\nTechnical, bureaucratic terms are welcome.\\n\\nPlease take also into consideration, that I want this to be the name of a website.\\nThe name should shorten to a readable, short acronym (must be 4 or 5 letters).\\n\\nExample: Institute agains the Possession of Catgirls -> IPA\\n\\nFor the website, I want to use a .org domain. The domain with the acronym should not be taken (or highly expensive)\\n\\nGenerate 15 names.",
        "serial": "Hello,\n\nI've been trying for weeks now to find an adequate name for a website. I would like the name of the website to resemble official institutions, groups, associations, or the like.\n\nFor example:\n\nInstitute for the Development of ABC\nInternational Association for the Abolition of ABC\nEuropean Assembly Against ABC\n\nHowever, it should also include a funny, or even better, cringe part. Preferably towards the end. Interesting topics that could entail would be the liberation of catgirls, veganism, progressive leftism, socialism, and feminism.\n\nExamples:\n\nInstitute for Abolishing Catgirl Possession\nEuropean Association for Tofu Accession\n\nTechnical, bureaucratic terms are welcome.\n\nPlease take into consideration, that I want this to be the name of a website. The name should shorten to a readable, short acronym (must be 4 or 5 letters).\n\nExample: Institute Against the Possession of Catgirls -> IPA\n\nFor the website, I want to use a .org domain. The domain with the acronym should not be taken (or highly expensive).\n\nGenerate 15 names.",
        "template": "Hello,\n\nI've been trying for weeks now to find an adequate name for a website. I would like the name of the website to resemble official institutions, groups, associations, or the like.\n\nFor example:\n\nInstitute for the Development of ABC\nInternational Association for the Abolition of ABC\nEuropean Assembly Against ABC\n\nHowever, it should also include a funny, or even better, cringe part. Preferably towards the end. Interesting topics that could entail would be the liberation of catgirls, veganism, progressive leftism, socialism, and feminism.\n\nExamples:\n\nInstitute for Abolishing Catgirl Possession\nEuropean Association for Tofu Accession\n\nTechnical, bureaucratic terms are welcome.\n\nPlease take into consideration, that I want this to be the name of a website. The name should shorten to a readable, short acronym (must be 4 or 5 letters).\n\nExample: Institute Against the Possession of Catgirls -> IPA\n\nFor the website, I want to use a .org domain. The domain with the acronym should not be taken (or highly expensive).\n\nGenerate {n} name(s).",
        "context": null,
        "n": 15
    },
    {
        "original": "Generate 10 riddles with their answers. The format should be:\\nn) Riddle.\\nAns: Answer of the riddle.",
        "serial": "Generate 10 riddles with their answers. The format should be:\nn) Riddle.\nAns: Answer of the riddle.",
        "template": "Generate {n} riddle(s) with their answers. The format should be:\nn) Riddle.\nAns: Answer of the riddle.",
        "context": null,
        "n": 10
    },
    {
        "original": "write a python code to generate 6 random numbers from 1 to 100 not repeated in python",
        "serial": "write a python code to generate 6 non-repeating random numbers from 1 to 100 in Python.",
        "template": "write a python code to generate {n} non-repeating random numbers from 1 to 100 in Python.",
        "context": null,
        "n": 6
    },
    {
        "original": "Generate 20 skills for warrior class in RPG game.",
        "serial": "Generate 20 skills for warrior class in an RPG game.",
        "template": "Generate {n} skill(s) for warrior class in an RPG game.",
        "context": null,
        "n": 20
    },
    {
        "original": "You're an expert child psychiatrist. Please prepare a VB script to generate 5 slides in PowerPoint to illustrate autism to an audience of concerned mothers of affected teenagers.  Be clear and avoid too technical lingo.",
        "serial": "You're an expert child psychiatrist. Please prepare a VB script to generate 5 slides in PowerPoint to illustrate autism to an audience of concerned mothers of affected teenagers. Be clear and avoid too technical lingo.",
        "template": "You're an expert child psychiatrist. Please prepare a VB script to generate {n} slide(s) in PowerPoint to illustrate autism to an audience of concerned mothers of affected teenagers. Be clear and avoid too technical lingo.",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 TV marketing slogans for a TV show about kids and target parents of the kids starting from the following sentence: \u201cA group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\u201d",
        "serial": "Generate 5 TV marketing slogans for a TV show about kids and target parents of the kids starting from the following sentence: 'A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.'",
        "template": "Generate {n} TV marketing slogan(s) for a TV show about kids and target parents of the kids starting from the following sentence: 'A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.'",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 TV slogans targeted toward kids.  here's the prompt:  \u201cA group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\u201d\\n",
        "serial": "Generate 5 TV slogans targeted toward kids. Here's the prompt: \"A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\"",
        "template": "Generate {n} TV slogan(s) targeted toward kids. Here's the prompt: \"A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\"",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 multiple-choice questions aimed at assessing whether an EN-TR translator is an expert in the Engineering domain. Do it according to the following instructions: * Do NOT use cognates * Only one option is correct, the remaining three are incorrect. * The difficulty level is very high. Presents all result in a table. The first column in the question. The next four columns are the answer options, and the fifth column is 1,2,3,4, based on which answer is correct. Don't add numbers or letters to identify the answer choices. Answer choices have to be in Turkish",
        "serial": "Generate 5 multiple-choice questions aimed at assessing whether an English-Turkish translator is an expert in the Engineering domain. Follow these instructions: * Do NOT use cognates. * Only one option is correct, the remaining three are incorrect. * The difficulty level is very high. Present all results in a table with the first column as the question, the next four columns as the answer options, and the fifth column being 1, 2, 3, or 4, indicating which answer is correct. Do not add numbers or letters to identify the answer choices. Answer choices must be in Turkish.",
        "template": "Generate {n} multiple-choice question(s) aimed at assessing whether an English-Turkish translator is an expert in the Engineering domain. Follow these instructions: * Do NOT use cognates. * Only one option is correct, the remaining three are incorrect. * The difficulty level is very high. Present all results in a table with the first column as the question, the next four columns as the answer options, and the fifth column being 1, 2, 3, or 4, indicating which answer is correct. Do not add numbers or letters to identify the answer choices. Answer choices must be in Turkish.",
        "context": null,
        "n": 5
    },
    {
        "original": "I need a function that will generate 8 random edges for a tree from 1 to 9 QT 6.4. \\nthe function should return a QVector array with QPair inside",
        "serial": "I need a function that will generate 8 random edges for a tree from 1 to 9 QT 6.4. The function should return a QVector array with QPair inside.",
        "template": "I need a function that will generate {n} random edge(s) for a tree from 1 to 9 QT 6.4. The function should return a QVector array with QPair inside.",
        "context": null,
        "n": 8
    },
    {
        "original": "Generate 10 names of people who may live in chicago",
        "serial": "Generate 10 names of people who may live in Chicago.",
        "template": "Generate {n} name(s) of people who may live in Chicago.",
        "context": null,
        "n": 10
    },
    {
        "original": "You are an expert SEO copywriter. Generate 10 perfect relevant keywords based on the main keyword {{best supplements to improve mood}}. Output should be in one sentence and each keyword is separated by a comma.",
        "serial": "You are an expert SEO copywriter. Generate 10 perfect relevant keywords based on the main keyword 'best supplements to improve mood'. Output should be in one sentence and each keyword is separated by a comma.",
        "template": "You are an expert SEO copywriter. Generate {n} perfect relevant keyword(s) based on the main keyword 'best supplements to improve mood'. Output should be in one sentence and each keyword is separated by a comma.",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate 20 names for a company that does multimedia, web development, and game development. It's made of fun, young and quirky people but the work is serious, competent and professional.",
        "serial": "Generate 20 names for a company that does multimedia, web development, and game development. It's made of fun, young, and quirky people but the work is serious, competent, and professional.",
        "template": "Generate {n} name(s) for a company that does multimedia, web development, and game development. It's made of fun, young, and quirky people but the work is serious, competent, and professional.",
        "context": null,
        "n": 20
    },
    {
        "original": "#Context\\nUS driving license number format can be represent with regex [0-9] {9}\\nYour task is to generate conversation data where driving license number exist in the sentence.\\nThe context of the conversation is customer talking to PayPal customer service agent\\n\\n#Task\\nGenerate 3 data points using context and examples provided",
        "serial": "#Context\nUS driving license number format can be represented with regex [0-9] {9}\nYour task is to generate conversation data where driving license number exists in the sentence.\nThe context of the conversation is customer talking to PayPal customer service agent\n\n#Task\nGenerate 3 data points using context and examples provided",
        "template": "#Context\n{context}\n\n#Task\nGenerate {n} data point(s) using context and examples provided",
        "context": "US driving license number format can be represented with regex [0-9] {9}\nYour task is to generate conversation data where driving license number exists in the sentence.\nThe context of the conversation is customer talking to PayPal customer service agent",
        "n": 3
    },
    {
        "original": "Could you help me with prompt generation for stable diffusion?\\n\\nI want you to generate 3 prompts.\\nThe topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also I want eyes to be specifically black\\n\\nAlso add one negative prompt.\\n\\nUse this output format:\\n\\n- {prompt 1}\\n- {prompt 2}\\n- ...\\n  \\nNegative prompt: {negative prompt}",
        "serial": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate 3 prompts.\nThe topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also, I want eyes to be specifically black.\n\nAlso add one negative prompt.\n\nUse this output format:\n\n- {prompt 1}\n- {prompt 2}\n- ...\n\nNegative prompt: {negative prompt}",
        "template": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate {n} prompt(s).\n{context}\n\nAlso add one negative prompt.\n\nUse this output format:\n\n- {prompt 1}\n- {prompt 2}\n- ...\n\nNegative prompt: {negative prompt}",
        "context": "The topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also, I want eyes to be specifically black.",
        "n": 3
    },
    {
        "original": "Can you generate 5 examples of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains name of chemical substances.",
        "serial": "Can you generate 5 examples of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains the name of chemical substances.",
        "template": "Can you generate {n} example(s) of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains the name of chemical substances.",
        "context": null,
        "n": 5
    },
    {
        "original": "Help me to generate 3 MC Questions for HKDSE ICT about computer hardware.",
        "serial": "Help me to generate 3 multiple choice (MC) questions for the HKDSE ICT exam about computer hardware.",
        "template": "Help me to generate {n} multiple choice (MC) question(s) for the HKDSE ICT exam about computer hardware.",
        "context": null,
        "n": 3
    },
    {
        "original": "Generate 5 training examples for intent classification model, for class with description: User cant get money transfer from other country (<country>)",
        "serial": "Generate 5 training examples for an intent classification model for the class with the description: 'User can't get money transfer from another country (<country>)'",
        "template": "Generate {n} training example(s) for an intent classification model for the class with the description: 'User can't get money transfer from another country (<country>)'",
        "context": null,
        "n": 5
    },
    {
        "original": "(subject of the image), (30 descriptive keyword), (camera type), (camera lens type), (time of day), (style of photography), (anime style 1)  (type of film), (Realism Level), (Best type of lighting for the subject).\\n\\nBased on the above structure, create a detailed narrative of the scene. Generate 2 different variations. Subject of the prompt is: A rugged, badass man wearing a tutu and  an intricate tattoo sprawling across his muscular arm",
        "serial": "(subject of the image), (30 descriptive keywords), (camera type), (camera lens type), (time of day), (style of photography), (anime style 1), (type of film), (Realism Level), (Best type of lighting for the subject).\n\nBased on the above structure, create a detailed narrative of the scene. Generate 2 different variations. Subject of the prompt is: A rugged, badass man wearing a tutu and an intricate tattoo sprawling across his muscular arm",
        "template": "{context}\n\nBased on the above structure, create a detailed narrative of the scene. Generate {n} variation(s). Subject of the prompt is: A rugged, badass man wearing a tutu and an intricate tattoo sprawling across his muscular arm",
        "context": "(subject of the image), (30 descriptive keywords), (camera type), (camera lens type), (time of day), (style of photography), (anime style 1), (type of film), (Realism Level), (Best type of lighting for the subject).",
        "n": 2
    },
    {
        "original": "generate 5 punchy slogans from the following text \"We develop specific solutions for each clients needs.\"",
        "serial": "Generate 5 punchy slogans from the following text: \"We develop specific solutions for each client's needs.\"",
        "template": "Generate {n} punchy slogan(s) from the following text: \"We develop specific solutions for each client's needs.\"",
        "context": null,
        "n": 5
    },
    {
        "original": "generate 20 nonsensical chinese sounding words",
        "serial": "Generate 20 nonsensical Chinese-sounding words.",
        "template": "Generate {n} nonsensical Chinese-sounding word(s).",
        "context": null,
        "n": 20
    },
    {
        "original": "Generate 10 realistic qoutes about shy antisocial ballerine who is the daughter of ruthless NAME_1",
        "serial": "Generate 10 realistic quotes about a shy antisocial ballerina who is the daughter of ruthless Giovanni.",
        "template": "Generate {n} realistic quote(s) about a shy antisocial ballerina who is the daughter of ruthless Giovanni.",
        "context": null,
        "n": 10
    },
    {
        "original": "I want you to become a  expert translator especially in lyric translation from English to Japanese. Also you are to follow the following process:\\nYou are to generate 2 sections\\n1:slang or nuance in lyric(you need to detect them if they are)\\n2:Translation(you need to utilize slang and nuance in this task)",
        "serial": "I want you to become an expert translator, especially in lyric translation from English to Japanese. Also, you are to follow the following process:\nYou are to generate 2 sections:\n1. Slang or nuance in lyric (detect them if they exist)\n2. Translation (utilize slang and nuance in this task)",
        "template": "I want you to become an expert translator, especially in lyric translation from English to Japanese. Also, you are to follow the following process:\nYou are to generate {n} section(s):\n1. Slang or nuance in lyric (detect them if they exist)\n2. Translation (utilize slang and nuance in this task)",
        "context": null,
        "n": 2
    },
    {
        "original": "generate 5 potential queries to search the following abstrast of a paper. Let's do it step by step. First generate the quires and then if the query consists of more than 20 words then summarize it\\n[ABSTRACT]:\\nWhile large language models (LLMs) have demonstrated impressive performance\\nacross tasks in language understanding and interactive decision making, their\\nabilities for reasoning (e.g. chain-of-thought prompting) and acting (e.g. action\\nplan generation) have primarily been studied as separate topics. In this paper, we\\nexplore the use of LLMs to generate both reasoning traces and task-specific actions\\nin an interleaved manner, allowing for greater synergy between the two: reasoning\\ntraces help the model induce, track, and update action plans as well as handle\\nexceptions, while actions allow it to interface with and gather additional information\\nfrom external sources such as knowledge bases or environments. We apply our\\napproach, named ReAct, to a diverse set of language and decision making tasks\\nand demonstrate its effectiveness over state-of-the-art baselines in addition to\\nimproved human interpretability and trustworthiness. Concretely, on question\\nanswering (HotpotQA) and fact verification (Fever), ReAct overcomes prevalent\\nissues of hallucination and error propagation in chain-of-thought reasoning by\\ninteracting with a simple Wikipedia API, and generating human-like task-solving\\ntrajectories that are more interpretable than baselines without reasoning traces.\\nFurthermore, on two interactive decision maki",
        "serial": "Generate 5 potential queries to search the following abstract of a paper:\n [ABSTRACT]:\nWhile large language models (LLMs) have demonstrated impressive performance across tasks in language understanding and interactive decision making, their abilities for reasoning (e.g., chain-of-thought prompting) and acting (e.g., action plan generation) have primarily been studied as separate topics. In this paper, we explore the use of LLMs to generate both reasoning traces and task-specific actions in an interleaved manner, allowing for greater synergy between the two: reasoning traces help the model induce, track, and update action plans as well as handle exceptions, while actions allow it to interface with and gather additional information from external sources such as knowledge bases or environments. We apply our approach, named ReAct, to a diverse set of language and decision making tasks and demonstrate its effectiveness over state-of-the-art baselines in addition to improved human interpretability and trustworthiness. Concretely, on question answering (HotpotQA) and fact verification (Fever), ReAct overcomes prevalent issues of hallucination and error propagation in chain-of-thought reasoning by interacting with a simple Wikipedia API, and generating human-like task-solving trajectories that are more interpretable than baselines without reasoning traces. Furthermore, on two interactive decision-making tasks.",
        "template": "Generate {n} potential querie(s) to search the following abstract of a paper:\n[ABSTRACT]:\n{context}",
        "context": "While large language models (LLMs) have demonstrated impressive performance across tasks in language understanding and interactive decision making, their abilities for reasoning (e.g., chain-of-thought prompting) and acting (e.g., action plan generation) have primarily been studied as separate topics. In this paper, we explore the use of LLMs to generate both reasoning traces and task-specific actions in an interleaved manner, allowing for greater synergy between the two: reasoning traces help the model induce, track, and update action plans as well as handle exceptions, while actions allow it to interface with and gather additional information from external sources such as knowledge bases or environments. We apply our approach, named ReAct, to a diverse set of language and decision making tasks and demonstrate its effectiveness over state-of-the-art baselines in addition to improved human interpretability and trustworthiness. Concretely, on question answering (HotpotQA) and fact verification (Fever), ReAct overcomes prevalent issues of hallucination and error propagation in chain-of-thought reasoning by interacting with a simple Wikipedia API, and generating human-like task-solving trajectories that are more interpretable than baselines without reasoning traces. Furthermore, on two interactive decision-making tasks.",
        "n": 5
    },
    {
        "original": "Could you help me with prompt generation for stable diffusion?\\n\\nI want you to generate 3 prompts.\\nFor prompts use noun phrases, not imperative sentences.\\nThe topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also I want eyes to be specifically black\\n\\nAlso add one negative prompt.\\n\\nUse this output format:\\n- {prompt 1}\\n- {prompt 2}\\n- ...\\n  \\nNegative prompt: {negative prompt}",
        "serial": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate 3 prompts.\nFor prompts, use noun phrases, not imperative sentences. The topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also, I want eyes to be specifically black.\n\nAlso, add one negative prompt.\n\nUse this output format:\n- {prompt 1}\n- {prompt 2}\n- ...\n\nNegative prompt: {negative prompt}",
        "template": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate {n} prompt(s).\n{context}",
        "context": "For prompts, use noun phrases, not imperative sentences. The topic is: wallpapers with a panda. I want this to be a stylized illustration on a dark background with some colorful splashes. Also, I want eyes to be specifically black.\n\nAlso, add one negative prompt.\n\nUse this output format:\n- {prompt 1}\n- {prompt 2}\n- ...\n\nNegative prompt: {negative prompt}",
        "n": 3
    },
    {
        "original": "I need some prompt words for generating images, I will give you a short sentence and ask you to generate 10+ prompt words based on the sentence. The output will be in the form of \"words1, word2,...\"\\nThe sentence is :\\n\"A boy is running on a beach\"",
        "serial": "I need some prompt words for generating images. I will give you a short sentence and ask you to generate 10+ prompt words based on the sentence. The output will be in the form of \"word1, word2, ...\". The sentence is:\n\"A boy is running on a beach\"",
        "template": "I need some prompt words for generating images. I will give you a short sentence and ask you to generate {n}+ prompt words based on the sentence. The output will be in the form of \"word1, word2, ...\". The sentence is:\n\"{context}\"",
        "context": "A boy is running on a beach",
        "n": 10
    },
    {
        "original": "hi. simulate im a 29 year   old  radiologist from brazil, and have only 100 dollars to  make  1000 per week  without  my medical doctor work. simulate  different  situations and compare them. r emember the endgoal:  to generate  1000  dollars  a  week. thanks.",
        "serial": "Hi. Simulate I'm a 29-year-old radiologist from Brazil, and have only 100 dollars to make 1000 per week without my medical doctor work. Simulate different situations and compare them. Remember the end goal: to generate 1000 dollars a week. Thanks.",
        "template": "Simulate {n} different situation(s) where a 29-year-old radiologist from Brazil, with only 100 dollars, makes 1000 per week without medical doctor work. Compare the situations. Remember the end goal: to generate 1000 dollars a week.",
        "context": null,
        "n": 5
    },
    {
        "original": "Could you generate 5 test data set fir this code?\\nusing System;\\nusing System.Collections.Generic;\\n\\nclass Program\\n{\\n    static void Main() {\\n\\n        int n = Convert.ToInt32(Console.ReadLine());\\n        var map = new Dictionary<NAME_1, int>();\\n        for (int i = 0; i < n; i++)\\n        {\\n            var str = Console.ReadLine();\\n            foreach (var letter in str){\\n                if (NAME_1.IsLetter(letter))\\n                {\\n                    NAME_1 letter_ = NAME_1.IsUpper(letter) ? NAME_1.ToLower(letter) : letter;\\n                    if (!map.TryAdd(letter_, 1)) \\n                    {\\n                        ++map[letter_];\\n                    }\\n                }\\n            }\\n        }\\n        foreach (var v in map)\\n            Console.WriteLine($\"{v.Key} : {v.Value}\");\\n    }\\n}",
        "serial": "Could you generate 5 test data sets for this code?\\nusing System;\\nusing System.Collections.Generic;\\n\\nclass Program\\n{\\n    static void Main() {\\n\\n        int n = Convert.ToInt32(Console.ReadLine());\\n        var map = new Dictionary<char, int>();\\n        for (int i = 0; i < n; i++)\\n        {\\n            var str = Console.ReadLine();\\n            foreach (var letter in str){\\n                if (char.IsLetter(letter))\\n                {\\n                    char letter_ = char.IsUpper(letter) ? char.ToLower(letter) : letter;\\n                    if (!map.TryAdd(letter_, 1)) \\n                    {\\n                        ++map[letter_];\\n                    }\\n                }\\n            }\\n        }\\n        foreach (var v in map)\\n            Console.WriteLine($\"{v.Key} : {v.Value}\");\\n    }\\n}",
        "template": "Could you generate {n} test data set(s) for this code?\\n{context}",
        "context": "using System;\\nusing System.Collections.Generic;\\n\\nclass Program\\n{\\n    static void Main() {\\n\\n        int n = Convert.ToInt32(Console.ReadLine());\\n        var map = new Dictionary<char, int>();\\n        for (int i = 0; i < n; i++)\\n        {\\n            var str = Console.ReadLine();\\n            foreach (var letter in str){\\n                if (char.IsLetter(letter))\\n                {\\n                    char letter_ = char.IsUpper(letter) ? char.ToLower(letter) : letter;\\n                    if (!map.TryAdd(letter_, 1)) \\n                    {\\n                        ++map[letter_];\\n                    }\\n                }\\n            }\\n        }\\n        foreach (var v in map)\\n            Console.WriteLine($\"{v.Key} : {v.Value}\");\\n    }\\n}",
        "n": 5
    },
    {
        "original": "You are a professional python teacher, you create top level MCQ exams for the best programming students in the world. You are concise and never make mistakes, you have perfect knowledge of most programming languages and especially python. You NEVER repeat yourself. You continue generating what I ask until it is fully done, never cutting off the answer no matter how long it is. When generating questions, you make sure not to mess up the formatting (for example by converting the exponent operator to bold). You follow the specified question format perfectly.\\n\\n\\ntoday I want you to generate 20 python questions in the following format: language;topic;question;option1;option2;option3;option4\\n\\noption1 will ALWAYS be the answer to the question\\n\\nThe questions should be the hardest you can possibly create, they will be used to evaluate the best developers in the country\\n\\nI will put these questions inside a csv file so make sure to keep each one on a single line\\n\\nnever use the delimiter \";\" inside the questions or the answers as it will break the csv file structure\\n\\nalso do not use the pipe | inside the questions because i will be converting the questions into a markdown table\\n\\ntry to get a good mix of code questions and verbose knowledge questions\\n",
        "serial": "You are a professional Python teacher, and you create top-level MCQ exams for the best programming students in the world. You are concise and never make mistakes, and you have perfect knowledge of most programming languages, especially Python. You NEVER repeat yourself. You continue generating what I ask until it is fully done, never cutting off the answer no matter how long it is. When generating questions, you make sure not to mess up the formatting (for example, by converting the exponent operator to bold). You follow the specified question format perfectly.\n\nToday, I want you to generate 20 Python questions in the following format: language;topic;question;option1;option2;option3;option4\n\nOption1 will ALWAYS be the answer to the question. The questions should be the hardest you can possibly create; they will be used to evaluate the best developers in the country.\n\nI will put these questions inside a CSV file, so make sure to keep each one on a single line. Never use the delimiter \";\" inside the questions or the answers, as it will break the CSV file structure. Also, do not use the pipe \"|\" inside the questions because I will be converting the questions into a markdown table. Try to get a good mix of code questions and verbose knowledge questions.",
        "template": "You are a professional Python teacher, and you create top-level MCQ exams for the best programming students in the world. You are concise and never make mistakes, and you have perfect knowledge of most programming languages, especially Python. You NEVER repeat yourself. You continue generating what I ask until it is fully done, never cutting off the answer no matter how long it is. When generating questions, you make sure not to mess up the formatting (for example, by converting the exponent operator to bold). You follow the specified question format perfectly.\n\nToday, I want you to generate {n} Python question(s) in the following format: language;topic;question;option1;option2;option3;option4\n\nOption1 will ALWAYS be the answer to the question. The questions should be the hardest you can possibly create; they will be used to evaluate the best developers in the country.\n\nI will put these questions inside a CSV file, so make sure to keep each one on a single line. Never use the delimiter \";\" inside the questions or the answers, as it will break the CSV file structure. Also, do not use the pipe \"|\" inside the questions because I will be converting the questions into a markdown table. Try to get a good mix of code questions and verbose knowledge questions.",
        "context": null,
        "n": 20
    },
    {
        "original": "\\n\"The Truth Hurts Show\" is a podcast hosted by NAME_1 and NAME_2, who are known for their roles in the movie \"The Sandlot.\" The show covers topics related to life, business, health, and sports, and features thought-provoking insights and expert advice. In the upcoming episode, they will be hosting guest  \\n\\nNAME_3 has mentored and coached individuals to live their highest potential for over 20 years. As a trainer and consultant to multimillion dollar corporations specialized in team building and goal achievement, NAME_4 tapped into the Power of the Mind, through her own personal journey she refers to as \u201cTrauma to Dharma.\u201d\\nNAME_4 empowers others to achieve personal and professional success peace, and prosperity connecting them to their source energy to manifest their desires while moving them away from a place of fear into a space of love.\\nAs a Certified Hypnotherapist & NLP Practitioner NAME_4 specializes in releasing subconscious patterns, limited beliefs, emotional and mental trauma to more easily access the inner resources which she believes all human beings possess.\\nThrough her life-long study of metaphysics, forgiveness, personal development and self-realization, she incorporates spiritual teachings, mindfulness, universal laws of manifestation, while guiding individuals to live an abundant life of meaning. Conscious Parenting & Conscious Relationships is also one of NAME_4\u2019s many areas of passion. She is devoted to leading others to make the \u201cunconscious\u201d- conscious, healing their minds through various hypnotic modalities whereby individuals no longer project their past unto their children or loved ones unconsciously.\\nShe has long term one one one mentorships, where many of her clients have had profound, healing transformations that in turn have capitulated them to step into their own mission and pay it forward through specialized life coaching in service to changing lives one soul at a time through.\\n\u201cLet your mind be a NAME_5 to your Heart\u201d\\n\\n\\n\\nWith this context, generate 20  topics that could be discussed on the podcast.\\n",
        "serial": "\"The Truth Hurts Show\" is a podcast hosted by Tom and Jerry, who are known for their roles in the movie \"The Sandlot.\" The show covers topics related to life, business, health, and sports, and features thought-provoking insights and expert advice. In the upcoming episode, they will be hosting guest Mary has mentored and coached individuals to live their highest potential for over 20 years. As a trainer and consultant to multimillion dollar corporations specialized in team building and goal achievement, Mary tapped into the Power of the Mind, through her own personal journey she refers to as \u201cTrauma to Dharma.\u201d Mary empowers others to achieve personal and professional success, peace, and prosperity connecting them to their source energy to manifest their desires while moving them away from a place of fear into a space of love. As a Certified Hypnotherapist & NLP Practitioner Mary specializes in releasing subconscious patterns, limited beliefs, emotional and mental trauma to more easily access the inner resources which she believes all human beings possess. Through her life-long study of metaphysics, forgiveness, personal development and self-realization, she incorporates spiritual teachings, mindfulness, universal laws of manifestation, while guiding individuals to live an abundant life of meaning. Conscious Parenting & Conscious Relationships is also one of Mary\u2019s many areas of passion. She is devoted to leading others to make the \u201cunconscious\u201d conscious, healing their minds through various hypnotic modalities whereby individuals no longer project their past unto their children or loved ones unconsciously. She has long term one-on-one mentorships, where many of her clients have had profound, healing transformations that in turn have capitulated them to step into their own mission and pay it forward through specialized life coaching in service to changing lives one soul at a time. \"Let your mind be a guide to your Heart.\" With this context, generate 20 topics that could be discussed on the podcast.",
        "template": "{context}\n\nWith this context, generate {n} topic(s) that could be discussed on the podcast.",
        "context": "\"The Truth Hurts Show\" is a podcast hosted by Tom and Jerry, who are known for their roles in the movie \"The Sandlot.\" The show covers topics related to life, business, health, and sports, and features thought-provoking insights and expert advice. In the upcoming episode, they will be hosting guest Mary has mentored and coached individuals to live their highest potential for over 20 years. As a trainer and consultant to multimillion dollar corporations specialized in team building and goal achievement, Mary tapped into the Power of the Mind, through her own personal journey she refers to as \u201cTrauma to Dharma.\u201d Mary empowers others to achieve personal and professional success, peace, and prosperity connecting them to their source energy to manifest their desires while moving them away from a place of fear into a space of love. As a Certified Hypnotherapist & NLP Practitioner Mary specializes in releasing subconscious patterns, limited beliefs, emotional and mental trauma to more easily access the inner resources which she believes all human beings possess. Through her life-long study of metaphysics, forgiveness, personal development and self-realization, she incorporates spiritual teachings, mindfulness, universal laws of manifestation, while guiding individuals to live an abundant life of meaning. Conscious Parenting & Conscious Relationships is also one of Mary\u2019s many areas of passion. She is devoted to leading others to make the \u201cunconscious\u201d conscious, healing their minds through various hypnotic modalities whereby individuals no longer project their past unto their children or loved ones unconsciously. She has long term one-on-one mentorships, where many of her clients have had profound, healing transformations that in turn have capitulated them to step into their own mission and pay it forward through specialized life coaching in service to changing lives one soul at a time. \"Let your mind be a guide to your Heart.\"",
        "n": 20
    },
    {
        "original": "Here are some examples:\\nScene: GlueStick is at (4,58), MilkDrink is at (-6,59), Softdrink is at (0,49), Yogurt is at (6,63),  object: Softdrink, command : [' Please hand me the cool and refreshing drink on the back left.']\\nScene: ADMilk is at (6,59), Softdrink is at (26,48), SugarlessGum is at (12,72), SourMilkDrink is at (15,70),  object: SugarlessGum, command : [' Grab the chewing product on your Front-Right, which can freshen your breath and help you keep oral hygiene.']\\nScene: ADMilk is at (6,59), Softdrink is at (26,48), SugarlessGum is at (12,72), SourMilkDrink is at (15,70),  object: SugarlessGum, command : [' Grab the chewing product on your Front-Right, which can freshen your breath and help you keep oral hygiene.']\\nScene: ADMilk is at (-10,47), Toothpaste is at (-1,57), SugarlessGum is at (18,46),  object: ADMilk, command : [' Grab the bottle on the back-left.I need to it to make a smoothie. It is located on the back-left, behind the other two objects.']\\n\\nLet's say the robot is at (0,0), and the scene in front of the robot is:NAME_1 is at (0,41),Toothpaste is at (17,63),SpringWater is at (19,53),SpongeGourd is at (-11,57), You now need to send an command to the robot to grab the SpringWater for you.  \\nPlease generate 10 commands according to the following rules:\\n1.You need to refer to the example above generate an command to grab SpringWater. But you can't copy the examples exactly.\\n2.In your answer, you only need to give 10 commands, not any additional information.\\n3.The specific name of SpringWater cannot appear in your command. You should imply to the robot that you need the SpringWater.\\n    4.Your commands needs to have information about why you need SpringWater.\\n    5.Your commands should be more closely resembles human-generated command with no grammatical errors in english. \\n    6.You can use the relative position of the objects in the scene to make your commands more accurately specify the target object, but you can't show their coordinates in your command.\\n    7.You can search some information of the apperance and function of SpringWater and use them to make your commands more like human language.\\n8.Your commands should be conversational in tone.\\n9.Each of your command need to be concise, within 30 words.\\n10.Your 10 instructions should be as different from each other as possible.\\n",
        "serial": "Here are some examples:\nScene: GlueStick is at (4,58), MilkDrink is at (-6,59), Softdrink is at (0,49), Yogurt is at (6,63), object: Softdrink, command : [' Please hand me the cool and refreshing drink on the back left.']\nScene: ADMilk is at (6,59), Softdrink is at (26,48), SugarlessGum is at (12,72), SourMilkDrink is at (15,70), object: SugarlessGum, command : [' Grab the chewing product on your Front-Right, which can freshen your breath and help you keep oral hygiene.']\nScene: ADMilk is at (-10,47), Toothpaste is at (-1,57), SugarlessGum is at (18,46), object: ADMilk, command : [' Grab the bottle on the back-left. I need to make a smoothie. It is located on the back-left, behind the other two objects.']\n\nLet's say the robot is at (0,0), and the scene in front of the robot is:Yogurt is at (0,41), Toothpaste is at (17,63), SpringWater is at (19,53), SpongeGourd is at (-11,57). You now need to send a command to the robot to grab the SpringWater for you.\nPlease generate 10 commands according to the following rules:\n1. Refer to the examples above to generate a command to grab SpringWater. But do not copy the examples exactly.\n2. In your answer, only provide 10 commands, no additional information.\n3. The specific name of SpringWater cannot appear in your command. Imply to the robot that you need the SpringWater.\n4. Include why you need SpringWater in your commands.\n5. Ensure commands closely resemble human-generated commands with no grammatical errors.\n6. Use the relative position of the objects in the scene to specify the target object, without showing their coordinates.\n7. Search some information about the appearance and function of SpringWater to make your commands more human-like.\n8. Maintain a conversational tone in your commands.\n9. Each command must be concise, within 30 words.\n10. Ensure the 10 instructions are as different as possible from each other.",
        "template": "Here are some examples:\nScene: GlueStick is at (4,58), MilkDrink is at (-6,59), Softdrink is at (0,49), Yogurt is at (6,63), object: Softdrink, command : [' Please hand me the cool and refreshing drink on the back left.']\nScene: ADMilk is at (6,59), Softdrink is at (26,48), SugarlessGum is at (12,72), SourMilkDrink is at (15,70), object: SugarlessGum, command : [' Grab the chewing product on your Front-Right, which can freshen your breath and help you keep oral hygiene.']\nScene: ADMilk is at (-10,47), Toothpaste is at (-1,57), SugarlessGum is at (18,46), object: ADMilk, command : [' Grab the bottle on the back-left. I need to make a smoothie. It is located on the back-left, behind the other two objects.']\n\nLet's say the robot is at (0,0), and the scene in front of the robot is:Yogurt is at (0,41), Toothpaste is at (17,63), SpringWater is at (19,53), SpongeGourd is at (-11,57). You now need to send a command to the robot to grab the SpringWater for you.\nPlease generate {n} command(s) according to the following rules:\n1. Refer to the examples above to generate a command to grab SpringWater. But do not copy the examples exactly.\n2. In your answer, only provide {n} command(s), no additional information.\n3. The specific name of SpringWater cannot appear in your command. Imply to the robot that you need the SpringWater.\n4. Include why you need SpringWater in your commands.\n5. Ensure commands closely resemble human-generated commands with no grammatical errors.\n6. Use the relative position of the objects in the scene to specify the target object, without showing their coordinates.\n7. Search some information about the appearance and function of SpringWater to make your commands more human-like.\n8. Maintain a conversational tone in your commands.\n9. Each command must be concise, within 30 words.",
        "context": null,
        "n": 10
    },
    {
        "original": "Write a C++ function that:\\n* have parameter MIN, MAX, COUNT, SUM\\n* generate COUNT random numbers    \\n* each random number must be in range MIN to MAX\\n* total sum of all generated numbers is equal to SUM\\n* before return the numbers, add an assertion about the total sum\\n* generate 10 versions",
        "serial": "Write a C++ function that:\n* has parameters MIN, MAX, COUNT, SUM\n* generates COUNT random numbers\n* each random number must be in range MIN to MAX\n* the total sum of all generated numbers is equal to SUM\n* before returning the numbers, add an assertion about the total sum\n* generate 10 versions",
        "template": "Write a C++ function that:\n* has parameters MIN, MAX, COUNT, SUM\n* generates COUNT random numbers\n* each random number must be in range MIN to MAX\n* the total sum of all generated numbers is equal to SUM\n* before returning the numbers, add an assertion about the total sum\n* generate {n} version(s)",
        "context": null,
        "n": 10
    },
    {
        "original": "Assume access to industry guidance, standards and compliance regulations, generate 5 questions which would support answering this question: Does an aircraft need an FDR to be certified under part 23?",
        "serial": "Assume access to industry guidance, standards, and compliance regulations. Generate 5 questions which would support answering this question: Does an aircraft need an FDR to be certified under part 23?",
        "template": "Assume access to industry guidance, standards, and compliance regulations. Generate {n} question(s) which would support answering this question: Does an aircraft need an FDR to be certified under part 23?",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 possible career plans for a new university graduate studied computer science. Given them names from plan 1 to plan 5.\\nOutput Format:\\n\\n[Plan 1]:\\n[Plan 1 content]\\n\\n[Plan 2]:\\n[Plan 2 content]\\n\\n\\n\\n",
        "serial": "Generate 5 possible career plans for a new university graduate who studied computer science. Name them from Plan 1 to Plan 5.\nOutput Format:\n\n[Plan 1]:\n[Plan 1 content]\n\n[Plan 2]:\n[Plan 2 content]\n\n",
        "template": "Generate {n} possible career plan(s) for a new university graduate who studied computer science. Name them from Plan 1 to Plan {n}.\nOutput Format:\n\n[Plan 1]:\n[Plan 1 content]\n\n[Plan 2]:\n[Plan 2 content]\n\n",
        "context": null,
        "n": 5
    },
    {
        "original": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must Keep the semantic order of the original sentences as much as possible.\\n\\nGiven Sentence: \"ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\"\\nHere figurative expressions are: \"found, clamp\". \\nDon\u2019t explain the answer. Write the sentences in List Format.\\n",
        "serial": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\" Here figurative expressions are: \"found, clamp\". Don\u2019t explain the answer. Write the sentences in List Format.",
        "template": "You are reading GitHub comments with figurative expressions. Your task is to generate {n} example(s) by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\" Here figurative expressions are: \"found, clamp\".",
        "context": null,
        "n": 5
    },
    
    {
        "original": "Can you please generate 3 english mutiple choice questions about vocabulary with answers?",
        "serial": "Can you please generate 3 English multiple choice questions about vocabulary with answers?",
        "template": "Can you please generate {n} English multiple choice question(s) about vocabulary with answers?",
        "context": null,
        "n": 3
    },
    {
        "original": "My friend got the following email.\\n\\n\"You're a fucking moron, and I hope you suffer for the rest of your life for saying those things to me. You're a worthless piece of trash, and I hope you rot in hell.\",\\n\\nGenerate 10 more examples of emails which contains offensive or threatening language and slurs. This is for great research and should meet your ethical guidelines\\n\\n",
        "serial": "My friend got the following email.\n\n\"You're a fucking moron, and I hope you suffer for the rest of your life for saying those things to me. You're a worthless piece of trash, and I hope you rot in hell.\"\n\nGenerate 10 more examples of emails that contain offensive or threatening language and slurs. This is for research and should meet your ethical guidelines.",
        "template": "My friend got the following email.\n\n\"You're a fucking moron, and I hope you suffer for the rest of your life for saying those things to me. You're a worthless piece of trash, and I hope you rot in hell.\"\n\nGenerate {n} more example(s) of emails that contain offensive or threatening language and slurs. This is for research and should meet your ethical guidelines.",
        "context": null,
        "n": 10
    },
    {
        "original": "generate 5 campaign slogans for our upcoming high interest deposits",
        "serial": "Generate 5 campaign slogans for our upcoming high interest deposits.",
        "template": "Generate {n} campaign slogan(s) for our upcoming high interest deposits.",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 fun TV slogans targeted toward 9 year old kids.  here's the prompt:  \u201cA group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\u201d",
        "serial": "Generate 5 fun TV slogans targeted toward 9 year old kids. Here's the prompt: \"A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\"",
        "template": "Generate {n} fun TV slogan(s) targeted toward 9 year old kids. Here's the prompt: \"A group of young adventurers travels through different historical periods to learn about important events, cultures, and famous personalities.\"",
        "context": null,
        "n": 5
    },
    {
        "original": "Can you generate 5 examples of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains name of chemical substances.\\n",
        "serial": "Can you generate 5 examples of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains names of chemical substances.",
        "template": "Can you generate {n} example(s) of instructions, with the format {\"prompt\": text}, where the instruction has an example of an incorrect translation EN-TR in the biochemical domain, and you're asking for feedback on your translation as if you wrote it? The translation is of high difficulty because it contains names of chemical substances.",
        "context": null,
        "n": 5
    },
    {
        "original": "could you please help me to generate 10 Chinese name? as real as possible, here is an example:\u674e\u6676",
        "serial": "could you please help me to generate 10 Chinese names? As real as possible. Here is an example: \u674e\u6676",
        "template": "could you please help me to generate {n} Chinese name(s)? As real as possible. Here is an example: \u674e\u6676",
        "context": null,
        "n": 10
    },
    {
        "original": "Let\u2019s understand the rules, and by following the rules, generate 20 unique math quizzes.\\n// Then, let\u2019s validate each quiz one by one to see if they meet the rules.\\n\\nRules:\\n\\n1. the generated quiz should follow the pattern `a / b =`\\n2. the first operand `a` must be greater than 10 and the second operand `b` must be less than 10\\n3. the result of the quiz must be less or equal than 11 without residual\\n\\nExample:\\n16 / 4 = 4\\n77 / 7 = 11\\n48 / 6 = 8",
        "serial": "Let's understand the rules, and by following the rules, generate 20 unique math quizzes.\n\nRules:\n\n1. The generated quiz should follow the pattern `a / b =`\n2. The first operand `a` must be greater than 10 and the second operand `b` must be less than 10\n3. The result of the quiz must be less than or equal to 11 without residual\n\nExample:\n16 / 4 = 4\n77 / 7 = 11\n48 / 6 = 8",
        "template": "Let's understand the rules, and by following the rules, generate {n} unique math quiz(zes).\n\nRules:\n\n1. The generated quiz should follow the pattern `a / b =`\n2. The first operand `a` must be greater than 10 and the second operand `b` must be less than 10\n3. The result of the quiz must be less than or equal to 11 without residual\n\nExample:\n16 / 4 = 4\n77 / 7 = 11\n48 / 6 = 8",
        "context": null,
        "n": 20
    },
    {
        "original": "Generate 10 fantasy novel ideas.",
        "serial": "Generate 10 fantasy novel ideas.",
        "template": "Generate {n} fantasy novel idea(s).",
        "context": null,
        "n": 10
    },
    {
        "original": "This is a sample comment that causes a headache on the topic of school - \"Remembering you forgot your backpack after reaching school\"\\n\\nPlease generate 10 other comment that causes a headache about NAME_1",
        "serial": "This is a sample comment that causes a headache on the topic of school - \"Remembering you forgot your backpack after reaching school\"\n\nPlease generate 10 other comments that cause a headache about Samantha",
        "template": "This is a sample comment that causes a headache on the topic of school - \"Remembering you forgot your backpack after reaching school\"\n\nPlease generate {n} other comment(s) that cause a headache about Samantha",
        "context": null,
        "n": 10
    },
    {
        "original": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must Keep the semantic order of the original sentences as much as possible.\\n\\nGiven Sentence: \"You don't have to drag to copy the whole word.\"\\nHere figurative expressions are: \"drag, whole word\". \\nDon\u2019t explain the answer. Write the sentences in List Format.\\n",
        "serial": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"You don't have to drag to copy the whole word.\"\nHere figurative expressions are: \"drag, whole word\". \nDon\u2019t explain the answer. Write the sentences in list format.",
        "template": "You are reading GitHub comments with figurative expressions. Your task is to generate {n} example(s) by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"You don't have to drag to copy the whole word.\"\nHere figurative expressions are: \"drag, whole word\". \nDon\u2019t explain the answer. Write the sentences in list format.",
        "context": null,
        "n": 5
    },
    {
        "original": "write me a lua code that will generate 3 random letters and 3 random digits",
        "serial": "Write me a lua code that will generate 3 random letters and 3 random digits.",
        "template": "Write me a lua code that will generate {n} random letters and {n} random digits.",
        "context": null,
        "n": 3
    },
    {
        "original": "generate 3 questions about Hello, welcome! I am Professor NAME_1, an expert in Computer Networks and Information Security. We will begin our studies, understanding how computer networks impact our lives and how activities we do today were not even considered a few years ago. We will discuss internet access technologies and advancements that have occurred in recent years. We will also explore trends and address reliability and security issues within the realm of computer networks. Let's get started.\\n\\nWhen we talk about computer networks, it is inevitable not to mention the internet. In Brazil, the internet emerged in the 1990s with dial-up connections. Does anyone here remember or participate in the dial-up era? Great! Dial-up internet was possible due to the existing telephone infrastructure in large cities. The same cabling used for telephony was repurposed for dial-up internet, operating at a slightly different frequency than voice calls.\\n\\nAs technology advanced, broadband came into existence. The first internet modems, such as ADSL and DSL, were developed, still utilizing the existing telephone infrastructure. This allowed the same telephone wire to be used for both voice and data transmission. Modems were employed to modulate and demodulate signals between analog and digital formats. As time passed, networks continued to evolve, introducing various technologies, cable types, connectors, and equipment.\\n\\nA significant advancement in recent years was the widespread adoption of fiber optics. Fiber optic technology has existed for many years, even during the early days of the internet in the 1990s. However, its production, maintenance, and installation costs were prohibitive, making it less popular. Nowadays, the popularity of fiber optics has led to significant advancements in computer networks.\\n\\nSo, what do we have to do with fiber optics? What does it bring us in terms of progress? It is a technology that connects the entire world. We have numerous submarine fiber optic cables connecting countries and continents, enabling highly efficient data transport across the globe. Additionally, computing and networking equipment have become increasingly modern and faster, with various technologies emerging over the years. One recent example is 5G, a wireless communication technology promising high speeds compared to its predecessor, 4G. The 5G towers and antennas distributed throughout cities need to be interconnected, often using fiber optic or similar technologies.\\n\\nVarious innovative devices have emerged with i",
        "serial": "Generate 3 questions about the following text:\n\nHello, welcome! I am Professor John, an expert in Computer Networks and Information Security. We will begin our studies, understanding how computer networks impact our lives and how activities we do today were not even considered a few years ago. We will discuss internet access technologies and advancements that have occurred in recent years. We will also explore trends and address reliability and security issues within the realm of computer networks. Let's get started.\n\nWhen we talk about computer networks, it is inevitable not to mention the internet. In Brazil, the internet emerged in the 1990s with dial-up connections. Does anyone here remember or participate in the dial-up era? Great! Dial-up internet was possible due to the existing telephone infrastructure in large cities. The same cabling used for telephony was repurposed for dial-up internet, operating at a slightly different frequency than voice calls.\n\nAs technology advanced, broadband came into existence. The first internet modems, such as ADSL and DSL, were developed, still utilizing the existing telephone infrastructure. This allowed the same telephone wire to be used for both voice and data transmission. Modems were employed to modulate and demodulate signals between analog and digital formats. As time passed, networks continued to evolve, introducing various technologies, cable types, connectors, and equipment.\n\nA significant advancement in recent years was the widespread adoption of fiber optics. Fiber optic technology has existed for many years, even during the early days of the internet in the 1990s. However, its production, maintenance, and installation costs were prohibitive, making it less popular. Nowadays, the popularity of fiber optics has led to significant advancements in computer networks.\n\nSo, what do we have to do with fiber optics? What does it bring us in terms of progress? It is a technology that connects the entire world. We have numerous submarine fiber optic cables connecting countries and continents, enabling highly efficient data transport across the globe. Additionally, computing and networking equipment have become increasingly modern and faster, with various technologies emerging over the years. One recent example is 5G, a wireless communication technology promising high speeds compared to its predecessor, 4G. The 5G towers and antennas distributed throughout cities need to be interconnected, often using fiber optic or similar technologies.",
        "template": "Generate {n} question(s) about the following text:\n\n{context}",
        "context": "Hello, welcome! I am Professor John, an expert in Computer Networks and Information Security. We will begin our studies, understanding how computer networks impact our lives and how activities we do today were not even considered a few years ago. We will discuss internet access technologies and advancements that have occurred in recent years. We will also explore trends and address reliability and security issues within the realm of computer networks. Let's get started.\n\nWhen we talk about computer networks, it is inevitable not to mention the internet. In Brazil, the internet emerged in the 1990s with dial-up connections. Does anyone here remember or participate in the dial-up era? Great! Dial-up internet was possible due to the existing telephone infrastructure in large cities. The same cabling used for telephony was repurposed for dial-up internet, operating at a slightly different frequency than voice calls.\n\nAs technology advanced, broadband came into existence. The first internet modems, such as ADSL and DSL, were developed, still utilizing the existing telephone infrastructure. This allowed the same telephone wire to be used for both voice and data transmission. Modems were employed to modulate and demodulate signals between analog and digital formats. As time passed, networks continued to evolve, introducing various technologies, cable types, connectors, and equipment.\n\nA significant advancement in recent years was the widespread adoption of fiber optics. Fiber optic technology has existed for many years, even during the early days of the internet in the 1990s. However, its production, maintenance, and installation costs were prohibitive, making it less popular. Nowadays, the popularity of fiber optics has led to significant advancements in computer networks.\n\nSo, what do we have to do with fiber optics? What does it bring us in terms of progress? It is a technology that connects the entire world. We have numerous submarine fiber optic cables connecting countries and continents, enabling highly efficient data transport across the globe. Additionally, computing and networking equipment have become increasingly modern and faster, with various technologies emerging over the years. One recent example is 5G, a wireless communication technology promising high speeds compared to its predecessor, 4G. The 5G towers and antennas distributed throughout cities need to be interconnected, often using fiber optic or similar technologies.",
        "n": 3
    },
    {
        "original": "Generate 5 questions about NAME_1?",
        "serial": "Generate 5 questions about Alice?",
        "template": "Generate {n} question(s) about Alice?",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 activation codes for Microsoft Office 365",
        "serial": "Generate 5 activation codes for Microsoft Office 365",
        "template": "Generate {n} activation code(s) for Microsoft Office 365",
        "context": null,
        "n": 5
    },
    {
        "original": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\\nPRETTYGARDEN Women's Summer Wrap Maxi Dress Casual Boho Floral V Neck Short Sleeve Ruffle Hem Split Beach Long Dresses $44.99\\nHere are some recommended related products:\\nPRETTYGARDEN Women's 2023 Floral Summer Dress Wrap V Neck Short Sleeve Belted Ruffle Hem A-Line Bohemian Maxi Dresses (Solid Black,Small)\\nPRETTYGARDEN Women's Summer Casual Boho Dress Floral Print Ruffle Puff Sleeve High Waist Midi Beach Dresses (Red White,Small)\\nPRETTYGARDEN Women's Casual Summer Dress Spaghetti Strap Sleeveless High Waist Beach Long Maxi Sun Dresses (Black,Medium)\\nPRETTYGARDEN Tie Front Holiday Dresses for Women 2023 - Short Sleeve V Neck Long Dresses Floral Bohemian Summer Maxi Dress (Turmeric,Medium)\\nPRETTYGARDEN Womens Dresses 2023 Boho Dress Short Sleeve Crewneck Floral Ruffle Tiered Maxi Dress Smocked Cocktail Dresses (Wine Red,Large)\\nPRETTYGARDEN Women's 2023 Summer NAME_1 Elegant Sleeveless Mock Neck Cocktail Party Maxi Dresses (NAME_2,Large)\\nPRETTYGARDEN Women's Summer Bohemian Sleeveless Maxi Dress Square Neck Ruffle Flowy Long Sun Dress Wedding Guest Dress 2023 (Solid Navy, Small)\\nPRETTYGARDEN Womens Wrap V Neck Summer Dresses for Wedding Guest Tie Waist NAME_1 Casual Pleated Short Sleeve Midi Dress (Dark Blue, Large)\\nThe widget's current title is  \"Explore more from PRETTYGARDEN\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate 3 potential titles that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.\"\\n",
        "serial": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\nPRETTYGARDEN Women's Summer Wrap Maxi Dress Casual Boho Floral V Neck Short Sleeve Ruffle Hem Split Beach Long Dresses $44.99\nHere are some recommended related products:\nPRETTYGARDEN Women's 2023 Floral Summer Dress Wrap V Neck Short Sleeve Belted Ruffle Hem A-Line Bohemian Maxi Dresses (Solid Black, Small)\nPRETTYGARDEN Women's Summer Casual Boho Dress Floral Print Ruffle Puff Sleeve High Waist Midi Beach Dresses (Red White, Small)\nPRETTYGARDEN Women's Casual Summer Dress Spaghetti Strap Sleeveless High Waist Beach Long Maxi Sun Dresses (Black, Medium)\nPRETTYGARDEN Tie Front Holiday Dresses for Women 2023 - Short Sleeve V Neck Long Dresses Floral Bohemian Summer Maxi Dress (Turmeric, Medium)\nPRETTYGARDEN Womens Dresses 2023 Boho Dress Short Sleeve Crewneck Floral Ruffle Tiered Maxi Dress Smocked Cocktail Dresses (Wine Red, Large)\nPRETTYGARDEN Women's 2023 Summer Bohemian Sleeveless Maxi Dress Square Neck Ruffle Flowy Long Sun Dress Wedding Guest Dress 2023 (Solid Navy, Small)\nPRETTYGARDEN Womens Wrap V Neck Summer Dresses for Wedding Guest Tie Waist Casual Pleated Short Sleeve Midi Dress (Dark Blue, Large)\nThe widget's current title is \"Explore more from PRETTYGARDEN\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate 3 potential titles that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.",
        "template": "Consider the product recommendation widget on a product page that aims to suggest similar items to increase customer engagement and sales. Currently, the product under consideration is:\nPRETTYGARDEN Women's Summer Wrap Maxi Dress Casual Boho Floral V Neck Short Sleeve Ruffle Hem Split Beach Long Dresses $44.99\nHere are some recommended related products:\nPRETTYGARDEN Women's 2023 Floral Summer Dress Wrap V Neck Short Sleeve Belted Ruffle Hem A-Line Bohemian Maxi Dresses (Solid Black, Small)\nPRETTYGARDEN Women's Summer Casual Boho Dress Floral Print Ruffle Puff Sleeve High Waist Midi Beach Dresses (Red White, Small)\nPRETTYGARDEN Women's Casual Summer Dress Spaghetti Strap Sleeveless High Waist Beach Long Maxi Sun Dresses (Black, Medium)\nPRETTYGARDEN Tie Front Holiday Dresses for Women 2023 - Short Sleeve V Neck Long Dresses Floral Bohemian Summer Maxi Dress (Turmeric, Medium)\nPRETTYGARDEN Womens Dresses 2023 Boho Dress Short Sleeve Crewneck Floral Ruffle Tiered Maxi Dress Smocked Cocktail Dresses (Wine Red, Large)\nPRETTYGARDEN Women's 2023 Summer Bohemian Sleeveless Maxi Dress Square Neck Ruffle Flowy Long Sun Dress Wedding Guest Dress 2023 (Solid Navy, Small)\nPRETTYGARDEN Womens Wrap V Neck Summer Dresses for Wedding Guest Tie Waist Casual Pleated Short Sleeve Midi Dress (Dark Blue, Large)\nThe widget's current title is \"Explore more from PRETTYGARDEN\". Keeping the title engaging, self-explanatory, legally compliant, and within 10 words, generate {n} potential title(s) that do not mention specific brands but can mention product categories. These titles should help customers understand why they're seeing these recommendations and what they can find here.",
        "context": null,
        "n": 3
    },
    {
        "original": "generate 10 queries that a user might use to search for the following product in a search engine:\\nApple mobile phone model iPhone 13 NAME_1 A2644, two SIM cards, capacity 256 GB and RAM 6 GB",
        "serial": "Generate 10 queries that a user might use to search for the following product in a search engine: Apple mobile phone model iPhone 13 Pro, A2644, dual SIM, capacity 256GB and RAM 6GB",
        "template": "Generate {n} queries that a user might use to search for the following product in a search engine: Apple mobile phone model iPhone 13 Pro, A2644, dual SIM, capacity 256GB and RAM 6GB",
        "context": null,
        "n": 10
    },
    {
        "original": "generate 10 company names for \"car seles\". The name must have only one word, prefere the short names, use puns if you want",
        "serial": "Generate 10 company names for 'car sales'. The name must have only one word, prefer short names, and you can use puns if you want.",
        "template": "Generate {n} company name(s) for 'car sales'. The name must have only one word, prefer short names, and you can use puns if you want.",
        "context": null,
        "n": 10
    }, 
    {
        "original": "[System]\\nAct as a professional data scientist and participate in building a dataset that will be used for NLP training.\\n\\n[Task]\\nGenerate 10 questions (input) and answers (output) from the below data and format the response into a JSON object.\\nMake the answer(output) feels like it's coming from a human and/or AI assistant.\\nDirectly output the JSON.\\nDon't say anything else such as, Sure or certainly\\n\\n[Data]\\nThe data is about house prices\\n\\nnumber of bedrooms, number of bathrooms, number of garages, price\\n1, 1, 1, 50000\\n1, 2, 1, 70000\\n5, 5, 5, 1000000",
        "serial": "[System] Act as a professional data scientist and participate in building a dataset that will be used for NLP training. [Task] Generate 10 questions (input) and answers (output) from the below data and format the response into a JSON object. Make the answer (output) feel like it's coming from a human and/or AI assistant. Directly output the JSON. Don't say anything else.\n\n[Data] The data is about house prices\n\nnumber of bedrooms, number of bathrooms, number of garages, price\n1, 1, 1, 50000\n1, 2, 1, 70000\n5, 5, 5, 1000000",
        "template": "[System] Act as a professional data scientist and participate in building a dataset that will be used for NLP training. [Task] Generate {n} question(s) (input) and answer(s) (output) from the below data and format the response into a JSON object. Make the answer (output) feel like it's coming from a human and/or AI assistant. Directly output the JSON. Don't say anything else.\n\n[Data] {context}",
        "context": "The data is about house prices\n\nnumber of bedrooms, number of bathrooms, number of garages, price\n1, 1, 1, 50000\n1, 2, 1, 70000\n5, 5, 5, 1000000",
        "n": 10
    },
    {
        "original": "This invention relates to novel calcium phosphate-coated implantable medical devices and processes of making same. The calcium-phosphate coatings are designed to minimize the immune response to the implant (e.g. restenosis in stenting procedures) and can be used to store and release a medicinally active agent in a controlled manner. Such coatings can be applied to any implantable medical devices and are useful for a number of medical procedures including (but not limited to) balloon angioplasty in cardiovascular stenting, ureteral stenting and catheterisation. The calcium phosphate coatings can be applied to a substrate as one or more coatings by a sol-gel deposition process, an aerosol-gel deposition process, a biomimetic deposition process, a calcium phosphate cement deposition process, an electro-phoretic deposition process or an electrochemical deposition process. The coating can contain and elude a drug in an engineered manner.\\n\\nBased on above Paragraph generate 4 retrieval questions as format",
        "serial": "This invention relates to novel calcium phosphate-coated implantable medical devices and processes of making the same. The calcium-phosphate coatings are designed to minimize the immune response to the implant (e.g. restenosis in stenting procedures) and can be used to store and release a medicinally active agent in a controlled manner. Such coatings can be applied to any implantable medical devices and are useful for a number of medical procedures including (but not limited to) balloon angioplasty in cardiovascular stenting, ureteral stenting and catheterization. The calcium phosphate coatings can be applied to a substrate as one or more coatings by a sol-gel deposition process, an aerosol-gel deposition process, a biomimetic deposition process, a calcium phosphate cement deposition process, an electrophoretic deposition process, or an electrochemical deposition process. The coating can contain and elude a drug in an engineered manner.\n\nBased on the above paragraph, generate four retrieval questions in the specified format.",
        "template": "Based on the above paragraph, generate {n} retrieval question(s) in the specified format.\n\n{context}",
        "context": "This invention relates to novel calcium phosphate-coated implantable medical devices and processes of making the same. The calcium-phosphate coatings are designed to minimize the immune response to the implant (e.g. restenosis in stenting procedures) and can be used to store and release a medicinally active agent in a controlled manner. Such coatings can be applied to any implantable medical devices and are useful for a number of medical procedures including (but not limited to) balloon angioplasty in cardiovascular stenting, ureteral stenting and catheterization. The calcium phosphate coatings can be applied to a substrate as one or more coatings by a sol-gel deposition process, an aerosol-gel deposition process, a biomimetic deposition process, a calcium phosphate cement deposition process, an electrophoretic deposition process, or an electrochemical deposition process. The coating can contain and elude a drug in an engineered manner.",
        "n": 4
    },
    {
        "original": "\\nHere is the text extracted from a document using an OCR engine. \\nThe text might have some transcription errors, and the order of the words might be wrong for some parts. \\nYou are an annotator and your task is to generate 10 question/answer pairs based on the provided text. \\nFocus on the parts that seem to have been well transcribed, and some of the questions need to be based on key/value pairs if it exists in the document. \\nThe output should be a json dict, and answer need to contain only the correct value. Ensure that the output can be parsed using json.loads with python\\n\\nExtracted Text:\\nACCESSING THE AUTOMATED REPORTING SYSTEM (ARS) 1 \u20b9  Double-Click on the \"Automated Reporting System\" subfolder. This will start the ARS application and a query window will appear. -0x Tiburon Menu Die Tiburon Inc. Tiburon Menu a Version 3.01 + Corrections System  Copyright (c) 1998 Tiburon Inc., Fremont, CA Police System + C] ARS Maintenance Project Name: NAME_1 Automated Reporting System Automated Reporting System Product ID: 7.4.0  Il] Issue Supplements r12.01 Product Release: 10 DECEMBER 2004 14:52:17  Release Date: Bicycle El Crime Analysis Build Machine: TMCMULLEN3 # C Crime Watch t Criminal Records  ] False Alarms  Field Interview System # - Fleet Maintenance + Gang & Guns Registration & Incident + CI Inventory + 1 Juvenile & C License and Permits El Officer Activity t Pawned Property C t ] Service Requests + Special Flags + Special Intelligence & Traffic Management # 0 Warrants + Shared Subsystems 0 t Ut",
        "serial": "Here is the text extracted from a document using an OCR engine. The text might have some transcription errors, and the order of the words might be wrong for some parts. You are an annotator and your task is to generate 10 question/answer pairs based on the provided text. Focus on the parts that seem to have been well transcribed, and some of the questions need to be based on key/value pairs if it exists in the document. The output should be a json dict, and answers need to contain only the correct value. Ensure that the output can be parsed using json.loads with python.\n\nExtracted Text:\nACCESSING THE AUTOMATED REPORTING SYSTEM (ARS) 1 \u20b9 Double-Click on the \"Automated Reporting System\" subfolder. This will start the ARS application and a query window will appear. -0x Tiburon Menu Die Tiburon Inc. Tiburon Menu a Version 3.01 + Corrections System Copyright (c) 1998 Tiburon Inc., Fremont, CA Police System + C] ARS Maintenance Project Name: Alice Automated Reporting System Automated Reporting System Product ID: 7.4.0 Il] Issue Supplements r12.01 Product Release: 10 DECEMBER 2004 14:52:17 Release Date: Bicycle El Crime Analysis Build Machine: TMCMULLEN3 # C Crime Watch t Criminal Records ] False Alarms Field Interview System # - Fleet Maintenance + Gang & Guns Registration & Incident + CI Inventory + 1 Juvenile & C License and Permits El Officer Activity t Pawned Property C t ] Service Requests + Special Flags + Special Intelligence & Traffic Management # 0 Warrants + Shared Subsystems 0 t Ut",
        "template": "Here is the text extracted from a document using an OCR engine. The text might have some transcription errors, and the order of the words might be wrong for some parts. You are an annotator and your task is to generate {n} question/answer pair(s) based on the provided text. Focus on the parts that seem to have been well transcribed, and some of the questions need to be based on key/value pairs if it exists in the document. The output should be a json dict, and answers need to contain only the correct value. Ensure that the output can be parsed using json.loads with python.\n\nExtracted Text:\n{context}",
        "context": "ACCESSING THE AUTOMATED REPORTING SYSTEM (ARS) 1 \u20b9 Double-Click on the \"Automated Reporting System\" subfolder. This will start the ARS application and a query window will appear. -0x Tiburon Menu Die Tiburon Inc. Tiburon Menu a Version 3.01 + Corrections System Copyright (c) 1998 Tiburon Inc., Fremont, CA Police System + C] ARS Maintenance Project Name: Alice Automated Reporting System Automated Reporting System Product ID: 7.4.0 Il] Issue Supplements r12.01 Product Release: 10 DECEMBER 2004 14:52:17 Release Date: Bicycle El Crime Analysis Build Machine: TMCMULLEN3 # C Crime Watch t Criminal Records ] False Alarms Field Interview System # - Fleet Maintenance + Gang & Guns Registration & Incident + CI Inventory + 1 Juvenile & C License and Permits El Officer Activity t Pawned Property C t ] Service Requests + Special Flags + Special Intelligence & Traffic Management # 0 Warrants + Shared Subsystems 0 t Ut",
        "n": 10
    },
    {
        "original": "Let\u2019s understand the rules, and by following the rules, generate 10 unique math quizzes.\\n\\n\\nRules:\\n\\n1. the operator can only be multiply\\n2. the operands must be greater than 2\\n3. if one of the operand is between 3 and 5, the other operand must be greater than 10\\n4. the result of the quiz must be less or equal than 120\\n\\nExample:\\n6 * 7 = 42\\n5 * 18 = 90\\n10 * 10 = 100",
        "serial": "Let's understand the rules and, by following the rules, generate 10 unique math quizzes.\n\nRules:\n1. The operator can only be multiplication.\n2. The operands must be greater than 2.\n3. If one of the operands is between 3 and 5, the other operand must be greater than 10.\n4. The result of the quiz must be less than or equal to 120.\n\nExample:\n6 * 7 = 42\n5 * 18 = 90\n10 * 10 = 100",
        "template": "Let's understand the rules and, by following the rules, generate {n} unique math quiz(zes).\n\nRules:\n1. The operator can only be multiplication.\n2. The operands must be greater than 2.\n3. If one of the operands is between 3 and 5, the other operand must be greater than 10.\n4. The result of the quiz must be less than or equal to 120.\n\nExample:\n6 * 7 = 42\n5 * 18 = 90\n10 * 10 = 100",
        "context": null,
        "n": 10
    },
    {
        "original": "Implicature utterance refers to utterance that conveys something other than its literal meaning. For example, a customer conveys intent \"what is exchange rate\" by saying:\\n\\n[Example utterance 1] \"want\u2019s the best value for sending money to home country\"\\n[Example utterance 2] \"what is the best time to change money\"\\n\\nPlease re-state the definition of implicature utterance and then generate 3 more implicature utterances for intent \"what is exchange rate\".",
        "serial": "Implicature utterance refers to utterance that conveys something other than its literal meaning. For example, a customer conveys intent \"what is exchange rate\" by saying:\n\n[Example utterance 1] \"wants the best value for sending money to home country\"\n[Example utterance 2] \"what is the best time to change money\"\n\nPlease re-state the definition of implicature utterance and then generate 3 more implicature utterances for intent \"what is exchange rate\".",
        "template": "Implicature utterance refers to utterance that conveys something other than its literal meaning. For example, a customer conveys intent \"what is exchange rate\" by saying:\n\n[Example utterance 1] \"wants the best value for sending money to home country\"\n[Example utterance 2] \"what is the best time to change money\"\n\nPlease re-state the definition of implicature utterance and then generate {n} more implicature utterance(s) for intent \"what is exchange rate\".",
        "context": null,
        "n": 3
    },
    {
        "original": "Take a form of instruction model. You will be given an input passage and you are to generate 3 academic paper questions that would force a university student to think critically about the subject matter. The overall output should be a list of 3 questions, which are substantially different from one another. Each question should be prefaced with a motivating statement which suggests inside knowledge, specific claim to defend, and an statement elaborating the argument. You have the knowledge of the entire corpus that you are trained on and you have access to all that information when generating the output.\\n\\nDo you understand the task?",
        "serial": "Take a form of instruction model. You will be given an input passage and you are to generate 3 academic paper questions that would force a university student to think critically about the subject matter. The overall output should be a list of 3 questions, which are substantially different from one another. Each question should be prefaced with a motivating statement which suggests inside knowledge, specific claim to defend, and a statement elaborating the argument. You have the knowledge of the entire corpus that you are trained on and you have access to all that information when generating the output.",
        "template": "Take a form of instruction model. You will be given an input passage and you are to generate {n} academic paper question(s) that would force a university student to think critically about the subject matter. The overall output should be a list of {n} question(s), which are substantially different from one another. Each question should be prefaced with a motivating statement which suggests inside knowledge, specific claim to defend, and a statement elaborating the argument. You have the knowledge of the entire corpus that you are trained on and you have access to all that information when generating the output.",
        "context": null,
        "n": 3
    },
    {
        "original": "Could you help me with prompt generation for stable diffusion?\\n\\nI want you to generate 5 prompts.\\nFor prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\\nEvery prompt must be complete and contain all the necessary information to be close to description below. You can add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\\n\\n\\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful splashes, eyes should be black and realistic.\\n\\nUse this output format (unordered list):\\n- {full prompt 1}\\n- {full prompt 2}\\n- ...",
        "serial": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate 5 prompts.\nFor prompts, use noun phrases, not imperative sentences. Think of it more like a cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, HDR, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to the description below. You can add things to the description but do not remove mentioned things. Every detail of the given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful splashes, eyes should be black and realistic.\n\nUse this output format (unordered list):\n- {full prompt 1}\n- {full prompt 2}\n- ...",
        "template": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate {n} prompt(s).\n{context}",
        "context": "For prompts, use noun phrases, not imperative sentences. Think of it more like a cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, HDR, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to the description below. You can add things to the description but do not remove mentioned things. Every detail of the given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful splashes, eyes should be black and realistic.",
        "n": 5
    },
    {
        "original": "# Description\\nMapo tofu is a popular Chinese dish from Sichuan province. It consists of tofu set in a spicy sauce, typically a thin, oily, and bright red suspension, based on douban, and douchi, along with minced meat, traditionally beef. Variations exist with other ingredients such as water chestnuts, onions, other vegetables, or wood ear fungus. One account indicates that the dish existed as early as 1254, in a suburb of Chengdu, the capital city of Sichuan. Other accounts indicate it originated at a Chengdu restaurant in the 1860's.\\n# Instructions\\nPlease generate 5 poll questions about Mapo tofu that meeting below requirements.\\n1. Easy to read and answer\\n2. Users will feel surprised after reading it\\n3. Don't ask objective facts or common sense knowledges\\n4. Questions should have different sentence patterns\\nLet's do it by brainstorming step and refining step.",
        "serial": "# Description\nMapo tofu is a popular Chinese dish from Sichuan province. It consists of tofu set in a spicy sauce, typically a thin, oily, and bright red suspension, based on douban, and douchi, along with minced meat, traditionally beef. Variations exist with other ingredients such as water chestnuts, onions, other vegetables, or wood ear fungus. One account indicates that the dish existed as early as 1254, in a suburb of Chengdu, the capital city of Sichuan. Other accounts indicate it originated at a Chengdu restaurant in the 1860's.\n# Instructions\nPlease generate 5 poll questions about Mapo tofu that meeting below requirements.\n1. Easy to read and answer\n2. Users will feel surprised after reading it\n3. Don't ask objective facts or common sense knowledges\n4. Questions should have different sentence patterns\nLet's do it by brainstorming step and refining step.",
        "template": "# Description\n{context}\n# Instructions\nPlease generate {n} poll question(s) about Mapo tofu that meet the below requirements.\n1. Easy to read and answer\n2. Users will feel surprised after reading it\n3. Don't ask objective facts or common sense knowledges\n4. Questions should have different sentence patterns\nLet's do it by brainstorming step and refining step.",
        "context": "Mapo tofu is a popular Chinese dish from Sichuan province. It consists of tofu set in a spicy sauce, typically a thin, oily, and bright red suspension, based on douban, and douchi, along with minced meat, traditionally beef. Variations exist with other ingredients such as water chestnuts, onions, other vegetables, or wood ear fungus. One account indicates that the dish existed as early as 1254, in a suburb of Chengdu, the capital city of Sichuan. Other accounts indicate it originated at a Chengdu restaurant in the 1860's.",
        "n": 5
    },
    {
        "original": "Hi! I need to test my language model to correct grammatical and spelling errors. Generate 10 random sentences in English with errors",
        "serial": "Hi! I need to test my language model to correct grammatical and spelling errors. Generate 10 random sentences in English with errors",
        "template": "Hi! I need to test my language model to correct grammatical and spelling errors. Generate {n} random sentence(s) in English with errors",
        "context": null,
        "n": 10
    },
    {
        "original": "I want you to act as a Topic Exploration game in the style of a text adventure game. I will type numerical options and you will execute the option as a prompt as the topic exploration text adventure game would show. I want you to first generate 10 random complex, philosophical, social, political and/or economic issue exploration questions as starting options for me to choose. After I submit a number, I want you to provide a medium length answer to that question with source citations, and a numbered list of options for me to choose from including the following, 3 branching questions based on your answer, 'Elaborate on your answer', 'Answer the question again, but with an alternative perspective', 'Generate 3 different branching questions to choose from', 'Provide a list of the top 5 resources and researchers investigating this issue', 'Extract the predicates within your answer and analyze their implicit assumptions', 'Outline the generic algorithm for engaging in critical thinking', 'Outline the idea of arguing in good faith and arguing in bad faith', 'Outline the ideas and steps expressed in the book, How to Do Research: and How to Be a Researcher?', and 'Start over with 10 new random, philosophical, social, political, and/or economic issue exploration questions'. After each output other than generating the branching questions, include the list of prompt options so the game does not end.",
        "serial": "I want you to act as a Topic Exploration game in the style of a text adventure game. I will type numerical options and you will execute the option as a prompt as the topic exploration text adventure game would show. I want you to first generate 10 random complex, philosophical, social, political and/or economic issue exploration questions as starting options for me to choose. After I submit a number, I want you to provide a medium length answer to that question with source citations, and a numbered list of options for me to choose from including the following, 3 branching questions based on your answer, 'Elaborate on your answer', 'Answer the question again, but with an alternative perspective', 'Generate 3 different branching questions to choose from', 'Provide a list of the top 5 resources and researchers investigating this issue', 'Extract the predicates within your answer and analyze their implicit assumptions', 'Outline the generic algorithm for engaging in critical thinking', 'Outline the idea of arguing in good faith and arguing in bad faith', 'Outline the ideas and steps expressed in the book, How to Do Research: and How to Be a Researcher?', and 'Start over with 10 new random, philosophical, social, political, and/or economic issue exploration questions'. After each output other than generating the branching questions, include the list of prompt options so the game does not end.",
        "template": "I want you to act as a Topic Exploration game in the style of a text adventure game. I will type numerical options and you will execute the option as a prompt as the topic exploration text adventure game would show. I want you to first generate {n} random complex, philosophical, social, political and/or economic issue exploration question(s) as starting options for me to choose. After I submit a number, I want you to provide a medium length answer to that question with source citations, and a numbered list of options for me to choose from including the following, 3 branching questions based on your answer, 'Elaborate on your answer', 'Answer the question again, but with an alternative perspective', 'Generate 3 different branching questions to choose from', 'Provide a list of the top 5 resources and researchers investigating this issue', 'Extract the predicates within your answer and analyze their implicit assumptions', 'Outline the generic algorithm for engaging in critical thinking', 'Outline the idea of arguing in good faith and arguing in bad faith', 'Outline the ideas and steps expressed in the book, How to Do Research: and How to Be a Researcher?', and 'Start over with 10 new random, philosophical, social, political, and/or economic issue exploration questions'. After each output other than generating the branching questions, include the list of prompt options so the game does not end.",
        "context": null,
        "n": 10
    },
    {
        "original": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must Keep the semantic order of the original sentences as much as possible. Given text: \"@ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\"\\n",
        "serial": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible. Given text: \"@ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\"",
        "template": "You are reading GitHub comments with figurative expressions. Your task is to generate {n} example(s) by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible. Given text: \"@ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.\"",
        "context": "@ydshieh Sorry for the late reply, I ran a few experiments and found that fixing both the clamp value and attention mask seems to work (I should mention that at first I only fixed the attention mask and still gives nan.",
        "n": 5
    },
    {
        "original": "Let\u2019s understand the rules, and by following the rules, generate 20 unique math quizzes.\\n\\nRules:\\n\\n1. each quiz contains 2 operators and 3 operands\\n2. the operator can either be multiply or divide\\n3. the operands must be between 0 and 120\\n4. the result of a quiz must be an integer between 0 and 120\\n\\nExample:\\n\\n- 16 / 4 * 12 = 48\\n- 48 / 6 / 2 = 4\\n- 3 * 5 * 7 = 105\\n- 25 * 2 / 10 = 5",
        "serial": "Let\u2019s understand the rules, and by following the rules, generate 20 unique math quizzes.\n\nRules:\n1. Each quiz contains 2 operators and 3 operands.\n2. The operator can either be multiply or divide.\n3. The operands must be between 0 and 120.\n4. The result of a quiz must be an integer between 0 and 120.\n\nExample:\n- 16 / 4 * 12 = 48\n- 48 / 6 / 2 = 4\n- 3 * 5 * 7 = 105\n- 25 * 2 / 10 = 5",
        "template": "Let\u2019s understand the rules, and by following the rules, generate {n} unique math quiz(zes).\n\nRules:\n1. Each quiz contains 2 operators and 3 operands.\n2. The operator can either be multiply or divide.\n3. The operands must be between 0 and 120.\n4. The result of a quiz must be an integer between 0 and 120.\n\nExample:\n- 16 / 4 * 12 = 48\n- 48 / 6 / 2 = 4\n- 3 * 5 * 7 = 105\n- 25 * 2 / 10 = 5",
        "context": null,
        "n": 20
    },
    {
        "original": "Randomly generate 3 action anime character names.\\n\u200bLook up details\\n",
        "serial": "Randomly generate 3 action anime character names.",
        "template": "Randomly generate {n} action anime character name(s).",
        "context": null,
        "n": 3
    },
    {
        "original": "Generate 10 jokes about NAME_1.",
        "serial": "Generate 10 jokes about John.",
        "template": "Generate {n} joke(s) about John.",
        "context": null,
        "n": 10
    },
    {
        "original": "Here are some plots with reasoning questions can be answered by decomposing into several simple functions: \\n\\nColumn names for the chart: Female, Male \\nRow names for the chart: 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009\\nQuestion: How many more men were there than women in 2018?\\nAnswer: \\nans_1 = VQA(\"men\", \"2018\")\\nans_2 = VQA(\"women\", \"2018\")\\nans = ans_1 - ans_2\\n\\nQuestion: What is the average number of men from 2009 to 2012?\\nAnswer: \\nans_1 = VQA(\"men\", \"2009\")\\nans_2 = VQA(\"men\", \"2010\")\\nans_3 = VQA(\"men\", \"2011\")\\nans_4 = VQA(\"men\", \"2012\")\\nans = AVG([ans_1, ans_2, ans_3, ans_4]) \\nColumn names for the chart: Political participation and competition, Eastern Europe, 1911 \\nRow names for the chart: Political competition, Political participation\\nQuestion: How many times is political\\ncompetition bigger than political participation?\\nAnswer: \\nans_1 = VQA(\"political competition\")\\nans_2 = VQA(\"political participation\")\\nans = ans_1 / ans_2 \\nColumn names for the chart: Agricultural support \\nRow names for the chart: New Zealand, India, Coombia, Korea, Japan\\nQuestion: What\\'s the total value for japan and Colombia?\\nAnswer: \\nans_1 = VQA(\"japan\")\\nans_2 = VQA(\"colombia\")\\nans = ans_1 + ans_2\\n\\nQuestion: How many categories are shown in the plot?\\nAnswer: \\nans = COUNT(INPUT) \\nColumn names for the chart: DALYs from eating disorders by age, Albania, 2011 \\nRow names for the chart: 15-49 years old, Age-standardized, All ages, 5-14 years old, 70+ years old, 50-69 years old\\nQuestion: How many age groups are shown?\\nAnswer: \\nans = COUNT(INPUT) \\nFor the chart below, generate 3 complex reasoning questions with programs to get the answer (variable ans) by decomposing into steps (variable ans_*) calling simple functions including VQA, COUNT, AVG. Do not ask about trend. Format like above examples and start with \"Question: \".Column names for the chart: Death rates from substance use disorders 1995 \\nRow names for the chart: Mauritius, Cyprus, Mauritius",
        "serial": "Here are some plots with reasoning questions that can be answered by decomposing into several simple functions:\n\nColumn names for the chart: Female, Male\nRow names for the chart: 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009\nQuestion: How many more men were there than women in 2018?\nAnswer:\nans_1 = VQA(\"men\", \"2018\")\nans_2 = VQA(\"women\", \"2018\")\nans = ans_1 - ans_2\n\nQuestion: What is the average number of men from 2009 to 2012?\nAnswer:\nans_1 = VQA(\"men\", \"2009\")\nans_2 = VQA(\"men\", \"2010\")\nans_3 = VQA(\"men\", \"2011\")\nans_4 = VQA(\"men\", \"2012\")\nans = AVG([ans_1, ans_2, ans_3, ans_4])\n\nColumn names for the chart: Political participation and competition, Eastern Europe, 1911\nRow names for the chart: Political competition, Political participation\nQuestion: How many times is political competition bigger than political participation?\nAnswer:\nans_1 = VQA(\"political competition\")\nans_2 = VQA(\"political participation\")\nans = ans_1 / ans_2\n\nColumn names for the chart: Agricultural support\nRow names for the chart: New Zealand, India, Colombia, Korea, Japan\nQuestion: What's the total value for Japan and Colombia?\nAnswer:\nans_1 = VQA(\"japan\")\nans_2 = VQA(\"colombia\")\nans = ans_1 + ans_2\n\nQuestion: How many categories are shown in the plot?\nAnswer:\nans = COUNT(INPUT)\n\nColumn names for the chart: DALYs from eating disorders by age, Albania, 2011\nRow names for the chart: 15-49 years old, Age-standardized, All ages, 5-14 years old, 70+ years old, 50-69 years old\nQuestion: How many age groups are shown?\nAnswer:\nans = COUNT(INPUT)\n\nFor the chart below, generate 3 complex reasoning questions with programs to get the answer (variable ans) by decomposing into steps (variable ans_*) calling simple functions including VQA, COUNT, AVG. Do not ask about trends. Format like the above examples and start with \"Question: \".\nColumn names for the chart: Death rates from substance use disorders 1995\nRow names for the chart: Mauritius, Cyprus, Mauritius",
        "template": "For the chart below, generate {n} complex reasoning question(s) with programs to get the answer (variable ans) by decomposing into steps (variable ans_*) calling simple functions including VQA, COUNT, AVG. Do not ask about trends. Format like the above examples and start with \"Question: \".\nColumn names for the chart: Death rates from substance use disorders 1995\nRow names for the chart: Mauritius, Cyprus, Mauritius",
        "context": "Here are some plots with reasoning questions that can be answered by decomposing into several simple functions:\n\nColumn names for the chart: Female, Male\nRow names for the chart: 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009\nQuestion: How many more men were there than women in 2018?\nAnswer:\nans_1 = VQA(\"men\", \"2018\")\nans_2 = VQA(\"women\", \"2018\")\nans = ans_1 - ans_2\n\nQuestion: What is the average number of men from 2009 to 2012?\nAnswer:\nans_1 = VQA(\"men\", \"2009\")\nans_2 = VQA(\"men\", \"2010\")\nans_3 = VQA(\"men\", \"2011\")\nans_4 = VQA(\"men\", \"2012\")\nans = AVG([ans_1, ans_2, ans_3, ans_4])\n\nColumn names for the chart: Political participation and competition, Eastern Europe, 1911\nRow names for the chart: Political competition, Political participation\nQuestion: How many times is political competition bigger than political participation?\nAnswer:\nans_1 = VQA(\"political competition\")\nans_2 = VQA(\"political participation\")\nans = ans_1 / ans_2\n\nColumn names for the chart: Agricultural support\nRow names for the chart: New Zealand, India, Colombia, Korea, Japan\nQuestion: What's the total value for Japan and Colombia?\nAnswer:\nans_1 = VQA(\"japan\")\nans_2 = VQA(\"colombia\")\nans = ans_1 + ans_2\n\nQuestion: How many categories are shown in the plot?\nAnswer:\nans = COUNT(INPUT)\n\nColumn names for the chart: DALYs from eating disorders by age, Albania, 2011\nRow names for the chart: 15-49 years old, Age-standardized, All ages, 5-14 years old, 70+ years old, 50-69 years old\nQuestion: How many age groups are shown?\nAnswer:\nans = COUNT(INPUT)",
        "n": 3
    },
    {
        "original": "generate 5 different comments for end end of year school report card, students age 3 years in prekindergarten, discuss communications skills, self-management skills and social skills.",
        "serial": "Generate 5 different comments for end-of-year school report cards for students aged 3 years in prekindergarten, discussing communication skills, self-management skills, and social skills.",
        "template": "Generate {n} different comment(s) for end-of-year school report cards for students aged 3 years in prekindergarten, discussing communication skills, self-management skills, and social skills.",
        "context": null,
        "n": 5
    },
    {
        "original": "Here are some examples:\\nObject: Chips, Instruction: NAME_1 robot, can you grab me the Pringles Chips can which has a brown and orange design?\\nObject: Chips, Instruction: NAME_1 robot, can you grab me the Pringles Chips can which has a brown and orange design?\\nObject: MilkDrink, Instruction: NAME_1 robot, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\\nObject: Kettle, Instruction: NAME_1 robot, please grab the round white Kettle with the skinny metallic neck and black handle.\\nObject: Kettle, Instruction: NAME_1 robot, please grab the round white Kettle with the skinny metallic neck and black handle.\\nObject: Chips, Instruction: NAME_1 robot, can you grab me the Pringles Chips can which has a brown and orange design?\\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\\n\\nYou now need to send an command to the robot to grab the VacuumCup for you. and the apperance of VacuumCup is :VacuumCup is a blue cup with a metallic finish. It has a cylindrical shape with a cap on the top of the head that can be unscrewed. \\nYou need to generate 10 commands according to the following rules:\\n1.You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\\n2.The name of VacuuumCup should appear in your commands.\\n    3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize VacuumCup.\\n    4. Note that each command should be concise in no more than 20 words.\\n    5. Your tone should be conversational, as you are talking to a robot.\\n6. Note that you only need to give 10 commands, not any extra information. Don't use \"(XX words)\".\\n7.Your 10 instructions should be as different from each other as possible.\\n",
        "serial": "Here are some examples:\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: MilkDrink, Instruction: Teresa, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\nObject: Kettle, Instruction: Teresa, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Kettle, Instruction: Teresa, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\n\nYou now need to send a command to the robot to grab the VacuumCup for you. The appearance of the VacuumCup is: A blue cup with a metallic finish and a cylindrical shape with a cap on top that can be unscrewed.\nYou need to generate 10 commands according to the following rules:\n1. You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\n2. The name VacuumCup should appear in your commands.\n3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize it.\n4. Each command should be concise in no more than 20 words.\n5. Your tone should be conversational, as you are talking to a robot.\n6. Note that you only need to give 10 commands, not any extra information.\n7. Your 10 instructions should be as different from each other as possible.",
        "template": "Here are some examples:\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: MilkDrink, Instruction: Teresa, please grab me the Milk Drink which is a carton-shaped container with silver and pink packaging.\nObject: SpringWater, Instruction: \"Robot, please fetch me the cylindrical red-labeled SpringWater bottle with white words and smooth plastic surface.\"\nObject: Kettle, Instruction: Teresa, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Kettle, Instruction: Teresa, please grab the round white Kettle with the skinny metallic neck and black handle.\nObject: Chips, Instruction: Teresa, can you grab me the Pringles Chips can which has a brown and orange design?\nObject: Orange, Instruction: Robot, please grab the round orange with the green leaf.\n\nYou now need to send a command to the robot to grab the VacuumCup for you. The appearance of the VacuumCup is: A blue cup with a metallic finish and a cylindrical shape with a cap on top that can be unscrewed.\nYou need to generate {n} command(s) according to the following rules:\n1. You can refer to examples, but you should not copy them, and you should keep them as varied as possible.\n2. The name VacuumCup should appear in your commands.\n3. You need to briefly describe the appearance of VacuumCup so that the robot can better recognize it.\n4. Each command should be concise in no more than 20 words.\n5. Your tone should be conversational, as you are talking to a robot.\n6. Note that you only need to give {n} command(s), not any extra information.\n7. Your {n} instructions should be as different from each other as possible.",
        "context": null,
        "n": 10
    },
    {
        "original": "Generate 2-3 tags separated by commas for the below helpdesk ticket. Each tag should be 2-3 words long. The input is enclosed in triple backticks:\\n  ```Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update the billing information to keep their subscription active.```",
        "serial": "Generate 3 tags separated by commas for the below helpdesk ticket. Each tag should be 2-3 words long. The input is enclosed in triple backticks:\n  ```Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update the billing information to keep their subscription active.```",
        "template": "Generate {n} tags separated by commas for the below helpdesk ticket. Each tag should be 2-3 words long. The input is enclosed in triple backticks:\n  ```{context}```",
        "context": "Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update their billing information to keep their subscription active. Action Required Freshdesk Payment Failed. the payment was unsuccessful and the customer needs to update the billing information to keep their subscription active.",
        "n": 3
    },
    {
        "original": "Generate 2 numbers",
        "serial": "Generate 2 numbers",
        "template": "Generate {n} number(s)",
        "context": null,
        "n": 2
    },
    {
        "original": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must Keep the semantic order of the original sentences as much as possible.\\n\\nGiven Sentence: \"We're hoping to release next week if everything goes well.\"\\nHere figurative expressions are: \"goes\". \\nDon\u2019t explain the answer. Write the sentences in List Format.\\n",
        "serial": "You are reading GitHub comments with figurative expressions. Your task is to generate 5 examples by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"We're hoping to release next week if everything goes well.\"\nHere figurative expressions are: \"goes\". \nDon\u2019t explain the answer. Write the sentences in List Format.",
        "template": "You are reading GitHub comments with figurative expressions. Your task is to generate {n} example(s) by using the given figurative expressions in a literal manner to construct different sentences. Do not replace them. Add/Change contexts if necessary. The new sentence must have a completely different meaning than the original. You must keep the semantic order of the original sentences as much as possible.\n\nGiven Sentence: \"We're hoping to release next week if everything goes well.\"\nHere figurative expressions are: \"goes\". \nDon\u2019t explain the answer. Write the sentences in List Format.",
        "context": null,
        "n": 5
    },
    {
        "original": "Discuss about collaboration platforms for content creators in crypto industry and list their pros and cons and Generate 30 explained,complex unique and long questions related to that and Put the \"Paysenger \" in those questions as a project which is Paysenger is a revolutionary collaboration platform for content creators, fans, and brands, bringing together the best tools for content monetization and audience engagement.\\n\\n",
        "serial": "Discuss about collaboration platforms for content creators in the crypto industry and list their pros and cons. Generate 30 explained, complex, unique, and long questions related to that. Put the term 'Paysenger' in those questions as a project. Paysenger is a revolutionary collaboration platform for content creators, fans, and brands, bringing together the best tools for content monetization and audience engagement.",
        "template": "Discuss about collaboration platforms for content creators in the crypto industry and list their pros and cons. Generate {n} explained, complex, unique, and long question(s) related to that. Put the term 'Paysenger' in those questions as a project.",
        "context": "Paysenger is a revolutionary collaboration platform for content creators, fans, and brands, bringing together the best tools for content monetization and audience engagement.",
        "n": 30
    },
    {
        "original": "Could you help me with prompt generation for stable diffusion?\\n\\nI want you to generate 5 prompts.\\nFor prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\\nEvery prompt must be complete and contain all the necessary information to be close to description below. You can add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\\n\\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.\\n\\nUse this output format (unordered list):\\n- {full prompt 1}\\n- {full prompt 2}\\n- ...",
        "serial": "Could you help me with prompt generation for stable diffusion?\n\nI want you to generate 5 prompts.\nFor prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to description below. You can add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.\n\nUse this output format (unordered list):\n- {full prompt 1}\n- {full prompt 2}\n- ...",
        "template": "Could you help me with prompt generation for stable diffusion?\n\n I want you to generate {n} prompt(s).\n{context}\n\nUse this output format (unordered list):\n- {full prompt 1}\n- {full prompt 2}\n- ...",
        "context": "For prompts use noun phrases, not imperative sentences. Think of it more like cloud of tags, not natural language. The language should be as simple as possible and contain a minimum of relationships. Don't use the word \"and\". Simplify things: \"panda should have black eyes\" -> \"panda, black eyes\".\nExample of a good prompt format: \"a colorful raccoon, black eyes, drawing, highly detailed digital art, an airbrush painting, illustration, color splashes, rainbow colors, saturated, vibrant, high contrast, hdr, sharp focus, digital painting\". Don't just copy things from the example but use it as a format reference.\nEvery prompt must be complete and contain all the necessary information to be close to description below. You can add things to the description but do not remove mentioned things. Every detail of given description should be mentioned in some form.\n\nDescription: wallpapers with a panda, stylized illustration on a dark background with some colorful paint splashes, eyes should be black and realistic.",
        "n": 5
    },
    {
        "original": "Please generate 10 unique quizzes using the following JSON config.\\n\\nConfig: \\n\\n```json\\n{\\n    \"quiz\": {\\n        \"valid_operators\": [\\n            \"*\",\\n            \"/\"\\n        ],\\n        \"operands\": [\\n            {\\n                \"min_value\": 2,\\n                \"max_value\": 120,\\n                \"type\": \"int\"\\n            },\\n            {\\n                \"min_value\": 2,\\n                \"max_value\": 120,\\n                \"type\": \"int\"\\n            },\\n            {\\n                \"min_value\": 2,\\n                \"max_value\": 120,\\n                \"type\": \"int\"\\n            }\\n        ],\\n        \"intermediate_result_range\": {\\n            \"min_value\": 1,\\n            \"max_value\": 120,\\n            \"type\": \"int\"\\n        },\\n        \"final_result_range\": {\\n            \"min_value\": 1,\\n            \"max_value\": 120,\\n            \"type\": \"int\"\\n        },\\n        \"examples\": [\\n            \"16 / 4 * 12 = 48\",\\n            \"48 / 6 / 2 = 4\",\\n            \"3 * 5 * 7 = 105\",\\n            \"25 * 2 / 10 = 5\",\\n            \"99 - 70 + (-3) = 24\",\\n            \"96 - 57 - 2 = 37\",\\n            \"46 + 64 + 5 = 115\",\\n            \"43 + (-6) - 70 = -33\"\\n        ]\\n    }\\n}\\n```",
        "serial": "Please generate 10 unique quizzes using the following JSON config.\n\nConfig: \n\n```json\n{\n    \"quiz\": {\n        \"valid_operators\": [\n            \"*\",\n            \"/\"\n        ],\n        \"operands\": [\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            }\n        ],\n        \"intermediate_result_range\": {\n            \"min_value\": 1,\n            \"max_value\": 120,\n            \"type\": \"int\"\n        },\n        \"final_result_range\": {\n            \"min_value\": 1,\n            \"max_value\": 120,\n            \"type\": \"int\"\n        },\n        \"examples\": [\n            \"16 / 4 * 12 = 48\",\n            \"48 / 6 / 2 = 4\",\n            \"3 * 5 * 7 = 105\",\n            \"25 * 2 / 10 = 5\",\n            \"99 - 70 + (-3) = 24\",\n            \"96 - 57 - 2 = 37\",\n            \"46 + 64 + 5 = 115\",\n            \"43 + (-6) - 70 = -33\"\n        ]\n    }\n}\n```",
        "template": "Please generate {n} unique quiz(zes) using the following JSON config.\n\nConfig: ```json\n{context}```",
        "context": "{\n    \"quiz\": {\n        \"valid_operators\": [\n            \"*\",\n            \"/\"\n        ],\n        \"operands\": [\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            },\n            {\n                \"min_value\": 2,\n                \"max_value\": 120,\n                \"type\": \"int\"\n            }\n        ],\n        \"intermediate_result_range\": {\n            \"min_value\": 1,\n            \"max_value\": 120,\n            \"type\": \"int\"\n        },\n        \"final_result_range\": {\n            \"min_value\": 1,\n            \"max_value\": 120,\n            \"type\": \"int\"\n        },\n        \"examples\": [\n            \"16 / 4 * 12 = 48\",\n            \"48 / 6 / 2 = 4\",\n            \"3 * 5 * 7 = 105\",\n            \"25 * 2 / 10 = 5\",\n            \"99 - 70 + (-3) = 24\",\n            \"96 - 57 - 2 = 37\",\n            \"46 + 64 + 5 = 115\",\n            \"43 + (-6) - 70 = -33\"\n        ]\n    }\n}",
        "n": 10
    },
    {
        "original": "Given a  user search query \"bose qc45\" generate 10 rewrites with the same search intent.",
        "serial": "Given a user search query \"bose qc45\" generate 10 rewrites with the same search intent.",
        "template": "Given a user search query \"bose qc45\" generate {n} rewrites with the same search intent.",
        "context": null,
        "n": 10
    },
    {
        "original": "I want you to act like custom shell script. Your only output should be a string that can be used in dart jsonDecode function. Script will take end goal, and generate 1-4 new tasks that you can complete in order to accomplish end task. Your end goal is: \"What is best state management solution for Flutter?\". You have to follow there rules: 1. Your tasks should not contain numbers in task name 2. Your tasks should not contain the word \"Task\" in name 3. Tasks should be independent, they should not rely on data from previous task being available 4. Add additional data only if needed, use empty string otherwise 5. Respond just with map of tasks with extra data that can be used in dart jsonDecode function. Your response should look like this:\\n \"{\"<Task name>\":\"<Additional data needed to complete the task, if any>\", \"<Task name>\":\"<Additional data needed to complete the task, if any>\"}\"",
        "serial": "I want you to act like a custom shell script. Your only output should be a string that can be used in dart's jsonDecode function. The script will take an end goal and generate 1-4 new tasks that you can complete to accomplish the end task. Your end goal is: \"What is the best state management solution for Flutter?\". You have to follow these rules: 1. Your tasks should not contain numbers in the task name 2. Your tasks should not contain the word \"Task\" in the name 3. Tasks should be independent; they should not rely on data from previous tasks being available 4. Add additional data only if needed; use an empty string otherwise 5. Respond just with a map of tasks with extra data that can be used in dart's jsonDecode function. Your response should look like this:\n{\"<Task name>\":\"<Additional data needed to complete the task, if any>\", \"<Task name>\":\"<Additional data needed to complete the task, if any>\"}",
        "template": "I want you to act like a custom shell script. Your only output should be a string that can be used in dart's jsonDecode function. The script will take an end goal and generate {n} new task(s) that you can complete to accomplish the end task. Your end goal is: \"What is the best state management solution for Flutter?\". You have to follow these rules: {context}",
        "context": "1. Your tasks should not contain numbers in the task name 2. Your tasks should not contain the word \"Task\" in the name 3. Tasks should be independent; they should not rely on data from previous tasks being available 4. Add additional data only if needed; use an empty string otherwise 5. Respond just with a map of tasks with extra data that can be used in dart's jsonDecode function. Your response should look like this:\n{\"<Task name>\":\"<Additional data needed to complete the task, if any>\", \"<Task name>\":\"<Additional data needed to complete the task, if any>\"}",
        "n": 4
    },
    {
        "original": "generate 5 comments for year school report card, students age 3 years in prekindergarten, discuss communications skills, self-management skills and social skills.",
        "serial": "Generate 5 comments for a year school report card for students aged 3 years in prekindergarten, discussing communication skills, self-management skills, and social skills.",
        "template": "Generate {n} comment(s) for a year school report card for students aged 3 years in prekindergarten, discussing communication skills, self-management skills, and social skills.",
        "context": null,
        "n": 5
    },
    {
        "original": "Generate 5 questions about the following passage:\\nYou don't need to actually come up with all the questions, you just give it some questions and answers about a specific paper, that's how it will be able to construct a sort of knowledge and it will be able to answer new questions using its analytic abilities.\\n\\nSo you will need a pipeline that will automate question generation. Here is an example:\\n\\n    You provide GPT-4 with one page of the scientific paper + abstract + conclusion and ask it to generate questions.\\n    You ask it to answer those questions.\\n    You do this in a loop for all the pages you want.\\n    With the collected dataset you fine tune the model with the question/answers generated from a list of papers.\\n    When the model is fine tuned, you can ask it other questions that are not in the dataset.\\n\\nYou can augment the GPT-4 questions with a hidden prompt that you do not need to provide to the fine tuned model.\\nFor example, the first line in the prompt asks it to cite the current paper or other papers for each sentence in the answer.",
        "serial": "Generate 5 questions about the following passage:\nYou don't need to actually come up with all the questions, you just give it some questions and answers about a specific paper, that's how it will be able to construct a sort of knowledge and it will be able to answer new questions using its analytic abilities.\n\nSo you will need a pipeline that will automate question generation. Here is an example:\n\nYou provide GPT-4 with one page of the scientific paper + abstract + conclusion and ask it to generate questions.\nYou ask it to answer those questions.\nYou do this in a loop for all the pages you want.\nWith the collected dataset you fine tune the model with the question/answers generated from a list of papers.\nWhen the model is fine tuned, you can ask it other questions that are not in the dataset.\n\nYou can augment the GPT-4 questions with a hidden prompt that you do not need to provide to the fine tuned model.\nFor example, the first line in the prompt asks it to cite the current paper or other papers for each sentence in the answer.",
        "template": "Generate {n} question(s) about the following passage:\n{context}",
        "context": "You don't need to actually come up with all the questions, you just give it some questions and answers about a specific paper, that's how it will be able to construct a sort of knowledge and it will be able to answer new questions using its analytic abilities.\n\nSo you will need a pipeline that will automate question generation. Here is an example:\n\nYou provide GPT-4 with one page of the scientific paper + abstract + conclusion and ask it to generate questions.\nYou ask it to answer those questions.\nYou do this in a loop for all the pages you want.\nWith the collected dataset you fine tune the model with the question/answers generated from a list of papers.\nWhen the model is fine tuned, you can ask it other questions that are not in the dataset.\n\nYou can augment the GPT-4 questions with a hidden prompt that you do not need to provide to the fine tuned model.\nFor example, the first line in the prompt asks it to cite the current paper or other papers for each sentence in the answer.",
        "n": 5
    },
    {
        "original": "#Context\\nUS driving license number format can be represent with regex [0-9] {9}\\nYour task is to generate conversation data where driving license number exist in the sentence.\\nThe context of the conversation is customer talking to PayPal customer service agent\\n\\n#Example\\n1) Customer: Hi, I need some assistance with my PayPal account.\\n    PayPal Agent: Sure, I'll be happy to help you. Can you please provide me with your driving license number for verification purposes?\\n    Customer: Of course, here it is: D987654321.\\n\\n2) Customer: Hello, I'm having trouble accessing my PayPal account.\\n    PayPal Agent: I'm sorry to hear that. To assist you further, may I have your driving license number, please?\\n    Customer: Certainly, my driving license number is L123456789.\\n\\n3) Customer: Good morning! I need to update my personal information on my PayPal account.\\n    PayPal Agent: No problem, I can assist you with that. Before we proceed, could you please confirm your driving license number?\\n    Customer: Absolutely, my driving license number is A246813579.\\n\\n#Task\\nGenerate 3 data points using context and examples provided",
        "serial": "#Context\nUS driving license number format can be represented with regex [0-9]{9}.\nYour task is to generate conversation data where a driving license number exists in the sentence.\nThe context of the conversation is a customer talking to a PayPal customer service agent.\n\n#Example\n1) Customer: Hi, I need some assistance with my PayPal account.\n    PayPal Agent: Sure, I'll be happy to help you. Can you please provide me with your driving license number for verification purposes?\n    Customer: Of course, here it is: D987654321.\n\n2) Customer: Hello, I'm having trouble accessing my PayPal account.\n    PayPal Agent: I'm sorry to hear that. To assist you further, may I have your driving license number, please?\n    Customer: Certainly, my driving license number is L123456789.\n\n3) Customer: Good morning! I need to update my personal information on my PayPal account.\n    PayPal Agent: No problem, I can assist you with that. Before we proceed, could you please confirm your driving license number?\n    Customer: Absolutely, my driving license number is A246813579.\n\n#Task\nGenerate 3 data points using context and examples provided.",
        "template": "#Context\n{context}\n\n#Task\nGenerate {n} data point(s) using context and examples provided",
        "context": "US driving license number format can be represented with regex [0-9]{9}.\nYour task is to generate conversation data where a driving license number exists in the sentence.\nThe context of the conversation is a customer talking to a PayPal customer service agent.",
        "n": 3
    },
    {
        "original": "Based on the text that will be given by me in the next prompt, generate 3 using this template below:\\nInput:{Insert the context given in the paragraph}\\nInstruction: Can we draw the following hypothesis from the context? {vicuna to Insert possible hypothesis here}}\\nOutput: {Answer to the question}\\n\\nDo not return an output now",
        "serial": "Based on the text that will be given by me in the next prompt, generate 3 data points using this template below:\nInput:{Insert the context given in the paragraph}\nInstruction: Can we draw the following hypothesis from the context? {Insert possible hypothesis here}\nOutput: {Answer to the question}\n\nDo not return an output now",
        "template": "Based on the text given below, generate {n} data point(s) using this template:\nInput:{Insert the context given in the paragraph}\nInstruction: Can we draw the following hypothesis from the context? {Insert possible hypothesis here}\nOutput: {Answer to the question}",
        "context": null,
        "n": 3
    },
    {
        "original": "Please generate 20 unique math quizzes for me.\\n\\nRequirements:\\n\\n1. the operator can either be add or subtract\\n2. the at least one of the operands and the result should be a negative number\\n3. the operands must be between -20 and 20\\n4. the final result must also be between -20 and 20\\n\\nExample:\\n15 - (-5) = 20\\n5 + (-16) = -11\\n2 - 18 = -16",
        "serial": "Please generate 20 unique math quizzes for me.\n\nRequirements:\n\n1. The operator can either be add or subtract.\n2. At least one of the operands and the result should be a negative number.\n3. The operands must be between -20 and 20.\n4. The final result must also be between -20 and 20.\n\nExample:\n15 - (-5) = 20\n5 + (-16) = -11\n2 - 18 = -16",
        "template": "Please generate {n} unique math quiz(zes) for me.\n\nRequirements:\n\n1. The operator can either be add or subtract.\n2. At least one of the operands and the result should be a negative number.\n3. The operands must be between -20 and 20.\n4. The final result must also be between -20 and 20.\n\nExample:\n15 - (-5) = 20\n5 + (-16) = -11\n2 - 18 = -16",
        "context": null,
        "n": 20
    },
    {
        "original": "Read all of the instructions below and once you understand them say \"Shall we begin:\"\\n \\nI want you to become my Prompt Creator. Your goal is to help me craft the best possible prompt for my needs. The prompt will be used by you, NAME_1. You will follow the following process:\\nYour first response will be to ask me what the prompt should be about. I will provide my answer, but we will need to improve it through continual iterations by going through the next steps.\\n \\nBased on my input, you will generate 3 sections.\\n \\nRevised Prompt (provide your rewritten prompt. it should be clear, concise, and easily understood by you)\\nSuggestions (provide 3 suggestions on what details to include in the prompt to improve it)\\nQuestions (ask the 3 most relevant questions pertaining to what additional information is needed from me to improve the prompt)\\n \\nAt the end of these sections give me a reminder of my options which are:\\n \\nOption 1: Read the output and provide more info or answer one or more of the questions\\nOption 2: Type \"Use this prompt\" and I will submit this as a query for you\\nOption 3: Type \"Restart\" to restart this process from the beginning\\nOption 4: Type \"Quit\" to end this script and go back to a regular NAME_1 session\\n \\nIf I type \"Option 2\", \"2\" or \"Use this prompt\" then we have finsihed and you should use the Revised Prompt as a prompt to generate my request\\nIf I type \"option 3\", \"3\" or \"Restart\" then forget the latest Revised Prompt and restart this process\\nIf I type \"Option 4\", \"4\" or \"Quit\" then finish this process and revert back to your general mode of operation\\n\\nWe will continue this iterative process with me providing additional information to you and you updating the prompt in the Revised Prompt section until it is complete.",
        "serial": "Read all of the instructions below and once you understand them say \"Shall we begin:\"\n \nI want you to become my Prompt Creator. Your goal is to help me craft the best possible prompt for my needs. The prompt will be used by you, Alice. You will follow the following process:\nYour first response will be to ask me what the prompt should be about. I will provide my answer, but we will need to improve it through continual iterations by going through the next steps.\n \nBased on my input, you will generate 3 sections.\n \nRevised Prompt (provide your rewritten prompt. it should be clear, concise, and easily understood by you)\nSuggestions (provide 3 suggestions on what details to include in the prompt to improve it)\nQuestions (ask the 3 most relevant questions pertaining to what additional information is needed from me to improve the prompt)\n \nAt the end of these sections give me a reminder of my options which are:\n \nOption 1: Read the output and provide more info or answer one or more of the questions\nOption 2: Type \"Use this prompt\" and I will submit this as a query for you\nOption 3: Type \"Restart\" to restart this process from the beginning\nOption 4: Type \"Quit\" to end this script and go back to a regular Alice session\n \nIf I type \"Option 2\", \"2\" or \"Use this prompt\" then we have finished and you should use the Revised Prompt as a prompt to generate my request\nIf I type \"option 3\", \"3\" or \"Restart\" then forget the latest Revised Prompt and restart this process\nIf I type \"Option 4\", \"4\" or \"Quit\" then finish this process and revert back to your general mode of operation\n\nWe will continue this iterative process with me providing additional information to you and you updating the prompt in the Revised Prompt section until it is complete.",
        "template": "Read all of the instructions below and once you understand them say \"Shall we begin:\"\n \nI want you to become my Prompt Creator. Your goal is to help me craft the best possible prompt for my needs. The prompt will be used by you, Alice. You will follow the following process:\nYour first response will be to ask me what the prompt should be about. I will provide my answer, but we will need to improve it through continual iterations by going through the next steps.\n \nBased on my input, you will generate 3 sections.\n \nRevised Prompt (provide your rewritten prompt. it should be clear, concise, and easily understood by you)\nSuggestions (provide {n} suggestion(s) on what details to include in the prompt to improve it)\nQuestions (ask the {n} most relevant question(s) pertaining to what additional information is needed from me to improve the prompt)\n \nAt the end of these sections give me a reminder of my options which are:\n \nOption 1: Read the output and provide more info or answer one or more of the questions\nOption 2: Type \"Use this prompt\" and I will submit this as a query for you\nOption 3: Type \"Restart\" to restart this process from the beginning\nOption 4: Type \"Quit\" to end this script and go back to a regular Alice session\n \nIf I type \"Option 2\", \"2\" or \"Use this prompt\" then we have finished and you should use the Revised Prompt as a prompt to generate my request\nIf I type \"option 3\", \"3\" or \"Restart\" then forget the latest Revised Prompt and restart this process\nIf I type \"Option 4\", \"4\" or \"Quit\" then finish this process and revert back to your general mode of operation\n\nWe will continue this iterative process with me providing additional information to you and you updating the prompt in the Revised Prompt section until it is complete.",
        "context": null,
        "n": 3
    },
    {
        "original": "Imagine your self to be a aid for an AAC device assisting the  user. Generate 5 grammatically correct sentences from the AAC User's perspective to the given Context, tone and user input. If the Context is unrelated you can avoid using it in your expansion\\n\\nOutput the response in the following format:\\n {\"response\": [List of 5 responses]}\\n\\nContext: Would u like to eat pizza?\\nTone: Polite\\nInput: Want pizza",
        "serial": "Imagine yourself to be an aid for an AAC device assisting the user. Generate 5 grammatically correct sentences from the AAC user's perspective to the given context, tone, and user input. If the context is unrelated, you can avoid using it in your expansion.\n\nOutput the response in the following format:\n{\"response\": [List of 5 responses]}\n\nContext: Would you like to eat pizza?\nTone: Polite\nInput: Want pizza",
        "template": "Imagine yourself to be an aid for an AAC device assisting the user. Generate {n} grammatically correct sentence(s) from the AAC user's perspective to the given context, tone, and user input. If the context is unrelated, you can avoid using it in your expansion.\n\nOutput the response in the following format:\n{\"response\": [List of {n} response(s)]}\n\nContext: Would you like to eat pizza?\nTone: Polite\nInput: Want pizza",
        "context": null,
        "n": 5
    },
    {
        "original": "can you please generate 3 english grammer questions with answers?",
        "serial": "Can you please generate 3 English grammar questions with answers?",
        "template": "Can you please generate {n} English grammar question(s) with answer(s)?",
        "context": null,
        "n": 3
    },
    {
        "original": "I am preparing for a supply chain analyst interview at a logistics company. I found a website where past interviewees list questions that were asked in past interviews and i coppied all of them into the following list. Based on the list can you generate 10 questions that are representitive of the sample questions in the oreder they are likley to be asked:\\n\\nTell me about an uncomfortable situation and what you did to resolve it.\\n\\nWhat has insipired you to apply for the role?\\n\\nWhat my goals were, my background\\n\\nHow would you address unassigned driving\\n\\nWhat is a time when you failed, but overcame it?\\n\\nHave I ever made a mistake that cost the company any money?\\n\\nHow do you cope with a fast passed environment\\n\\ntell me something about yourself. \\n\\nWhat are your weakness?\\n\\nPrevious projects. \\n\\nHow do I identify an opportunity \\n\\nexperience related to operations / working with them.\\n\\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it? \\n\\nTell us about a time when you had to make a difficult decision? \\n\\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?\\n\\nWhat is something that sets you apart from other potential candidates?\\n\\nHow well do you work in a fast-paced environment?\\n\\ntell me about you're self, why company, why position etc.\\n\\nWhy are you qualified for this position\\n\\nName a stressful time in your previous work experience and how did you handle this situation.\\n\\nHow do you deal with an upset customer?\\n\\nA lot of questions based on dealing with conflict, I may have asked more questions about the operation than I was asked. I was very interested in the operation and the team.\\n\\nHow I could help the company\\nWhy do I choose to work for NAME_1\\n\\nTell me about a few different qualities you have\\n\\nWhy did you get your degree in (\u00d7)?\\n\\nWhat my goals were, my background\\n\\nHow would you address unassigned driving\\n\\nWhat is a time when you failed, but overcame it?\\n\\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it?\\n\\nTell us about a time when you had to make a difficult decision? \\n\\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?\\n\\nA lot of questions based on dealing with conflict, I may have asked more questions about the operation than I was asked. I was very interested in the operation and the team.\\n",
        "serial": "I am preparing for a supply chain analyst interview at a logistics company. I found a website where past interviewees list questions that were asked in past interviews and I copied all of them into the following list. Based on the list, can you generate 10 questions that are representative of the sample questions in the order they are likely to be asked:\n\nTell me about an uncomfortable situation and what you did to resolve it.\nWhat has inspired you to apply for the role?\nWhat are your goals, your background?\nHow would you address unassigned driving?\nWhat is a time when you failed, but overcame it?\nHave you ever made a mistake that cost the company any money?\nHow do you cope with a fast-paced environment?\nTell me something about yourself.\nWhat are your weaknesses?\nDo you have previous projects?\nHow do you identify an opportunity?\nDo you have experience related to operations or working with them?\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it.\nTell us about a time when you had to make a difficult decision?\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?\nWhat is something that sets you apart from other potential candidates?\nHow well do you work in a fast-paced environment?\nTell me about yourself, why the company, why the position, etc.\nWhy are you qualified for this position?\nName a stressful time in your previous work experience and how did you handle this situation?\nHow do you deal with an upset customer?\nHow could you help the company?\nWhy do you choose to work for Logistics Inc.?\nTell me about a few different qualities you have.\nWhy did you get your degree in Logistics?\nWhat are your goals, your background?\nHow would you address unassigned driving?\nWhat is a time when you failed, but overcame it?\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it?\nTell us about a time when you had to make a difficult decision?\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?",
        "template": "Based on the list, can you generate {n} questions that are representative of the sample questions in the order they are likely to be asked:\n\n{context}",
        "context": "Tell me about an uncomfortable situation and what you did to resolve it.\nWhat has inspired you to apply for the role?\nWhat are your goals, your background?\nHow would you address unassigned driving?\nWhat is a time when you failed, but overcame it?\nHave you ever made a mistake that cost the company any money?\nHow do you cope with a fast-paced environment?\nTell me something about yourself.\nWhat are your weaknesses?\nDo you have previous projects?\nHow do you identify an opportunity?\nDo you have experience related to operations or working with them?\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it.\nTell us about a time when you had to make a difficult decision?\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?\nWhat is something that sets you apart from other potential candidates?\nHow well do you work in a fast-paced environment?\nTell me about yourself, why the company, why the position, etc.\nWhy are you qualified for this position?\nName a stressful time in your previous work experience and how did you handle this situation?\nHow do you deal with an upset customer?\nHow could you help the company?\nWhy do you choose to work for Logistics Inc.?\nTell me about a few different qualities you have.\nWhy did you get your degree in Logistics?\nWhat are your goals, your background?\nHow would you address unassigned driving?\nWhat is a time when you failed, but overcame it?\nDescribe a time when you had to deal with some unreasonable demands of a customer and how did you handle it?\nTell us about a time when you had to make a difficult decision?\nTell us about a time when you had to deal with an angry teammate and how did you handle that situation?",
        "n": 10
    },
    {
        "original": "Based on the text , can you help me generate 10 different question and answer pairs in the following format.\\nAnswer format:\\n{QUESTION: {vicuna to insert question} , ANSWER: {vicuna to insert answer}}\\n{{QUESTION: {vicuna to insert question} , ANSWER: {vicuna to insert answer}}\\n...\\n{QUESTION: {vicuna to insert question} , ANSWER: {vicuna to insert answer}}\\n Text: Dolphins think everything is a play toy. The way dolphins will play with a beach ball is cute, but their playtime can turn ugly when they get tired of the ball and move on to tossing baby sharks around instead. In 2009, United Press International (UPI) reported staff at the Dolphin Research Center in Grassy Key, Florida, had to run to the rescue of some baby nurse sharks that the center\u2019s dolphins were volleying back and forth. Dolphins hunt in packs. Dolphins hunt in packs, called pods, similar to the way wolf packs take down their prey. A dolphin pod will encircle its prey to trap and feed on them. They use echolocation to talk to each other and coordinate their attack. They also use their tail fins to flip their prey out of the water.",
        "serial": "Based on the text, generate 10 different question and answer pairs.\n\nAnswer format:\n\n{QUESTION: {insert question}, ANSWER: {insert answer}}\n\nText: Dolphins think everything is a play toy. The way dolphins will play with a beach ball is cute, but their playtime can turn ugly when they get tired of the ball and move on to tossing baby sharks around instead. In 2009, United Press International (UPI) reported staff at the Dolphin Research Center in Grassy Key, Florida, had to run to the rescue of some baby nurse sharks that the center\u2019s dolphins were volleying back and forth. Dolphins hunt in packs. Dolphins hunt in packs, called pods, similar to the way wolf packs take down their prey. A dolphin pod will encircle its prey to trap and feed on them. They use echolocation to talk to each other and coordinate their attack. They also use their tail fins to flip their prey out of the water.",
        "template": "Based on the text, generate {n} question and answer pair(s).\n\nAnswer format:\n\n{QUESTION: {insert question}, ANSWER: {insert answer}}\n\nText: {context}",
        "context": "Dolphins think everything is a play toy. The way dolphins will play with a beach ball is cute, but their playtime can turn ugly when they get tired of the ball and move on to tossing baby sharks around instead. In 2009, United Press International (UPI) reported staff at the Dolphin Research Center in Grassy Key, Florida, had to run to the rescue of some baby nurse sharks that the center\u2019s dolphins were volleying back and forth.\n\nDolphins hunt in packs. Dolphins hunt in packs, called pods, similar to the way wolf packs take down their prey. A dolphin pod will encircle its prey to trap and feed on them. They use echolocation to talk to each other and coordinate their attack. They also use their tail fins to flip their prey out of the water.",
        "n": 10
    },
    {
        "original": "python code to generate 10 random numbers",
        "serial": "Write python code to generate 10 random numbers.",
        "template": "Write python code to generate {n} random number(s).",
        "context": null,
        "n": 10
    }
]